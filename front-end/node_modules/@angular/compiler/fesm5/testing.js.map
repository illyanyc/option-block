{"version":3,"file":"testing.js","sources":["../../../../../../packages/compiler/testing/src/resource_loader_mock.ts","../../../../../../packages/compiler/testing/src/schema_registry_mock.ts","../../../../../../packages/compiler/testing/src/directive_resolver_mock.ts","../../../../../../packages/compiler/testing/src/ng_module_resolver_mock.ts","../../../../../../packages/compiler/testing/src/pipe_resolver_mock.ts","../../../../../../packages/compiler/testing/src/testing.ts","../../../../../../packages/compiler/testing/public_api.ts","../../../../../../packages/compiler/testing/index.ts","../../../../../../packages/compiler/testing/testing.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ResourceLoader} from '@angular/compiler';\n\n/**\n * A mock implementation of {@link ResourceLoader} that allows outgoing requests to be mocked\n * and responded to within a single test, without going to the network.\n */\nexport class MockResourceLoader extends ResourceLoader {\n  private _expectations: _Expectation[] = [];\n  private _definitions = new Map<string, string>();\n  private _requests: _PendingRequest[] = [];\n\n  get(url: string): Promise<string> {\n    const request = new _PendingRequest(url);\n    this._requests.push(request);\n    return request.getPromise();\n  }\n\n  hasPendingRequests() {\n    return !!this._requests.length;\n  }\n\n  /**\n   * Add an expectation for the given URL. Incoming requests will be checked against\n   * the next expectation (in FIFO order). The `verifyNoOutstandingExpectations` method\n   * can be used to check if any expectations have not yet been met.\n   *\n   * The response given will be returned if the expectation matches.\n   */\n  expect(url: string, response: string) {\n    const expectation = new _Expectation(url, response);\n    this._expectations.push(expectation);\n  }\n\n  /**\n   * Add a definition for the given URL to return the given response. Unlike expectations,\n   * definitions have no order and will satisfy any matching request at any time. Also\n   * unlike expectations, unused definitions do not cause `verifyNoOutstandingExpectations`\n   * to return an error.\n   */\n  when(url: string, response: string) {\n    this._definitions.set(url, response);\n  }\n\n  /**\n   * Process pending requests and verify there are no outstanding expectations. Also fails\n   * if no requests are pending.\n   */\n  flush() {\n    if (this._requests.length === 0) {\n      throw new Error('No pending requests to flush');\n    }\n\n    do {\n      this._processRequest(this._requests.shift()!);\n    } while (this._requests.length > 0);\n\n    this.verifyNoOutstandingExpectations();\n  }\n\n  /**\n   * Throw an exception if any expectations have not been satisfied.\n   */\n  verifyNoOutstandingExpectations() {\n    if (this._expectations.length === 0) return;\n\n    const urls: string[] = [];\n    for (let i = 0; i < this._expectations.length; i++) {\n      const expectation = this._expectations[i];\n      urls.push(expectation.url);\n    }\n\n    throw new Error(`Unsatisfied requests: ${urls.join(', ')}`);\n  }\n\n  private _processRequest(request: _PendingRequest) {\n    const url = request.url;\n\n    if (this._expectations.length > 0) {\n      const expectation = this._expectations[0];\n      if (expectation.url == url) {\n        remove(this._expectations, expectation);\n        request.complete(expectation.response);\n        return;\n      }\n    }\n\n    if (this._definitions.has(url)) {\n      const response = this._definitions.get(url);\n      request.complete(response == null ? null : response);\n      return;\n    }\n\n    throw new Error(`Unexpected request ${url}`);\n  }\n}\n\nclass _PendingRequest {\n  // TODO(issue/24571): remove '!'.\n  resolve!: (result: string) => void;\n  // TODO(issue/24571): remove '!'.\n  reject!: (error: any) => void;\n  promise: Promise<string>;\n\n  constructor(public url: string) {\n    this.promise = new Promise((res, rej) => {\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n\n  complete(response: string|null) {\n    if (response == null) {\n      this.reject(`Failed to load ${this.url}`);\n    } else {\n      this.resolve(response);\n    }\n  }\n\n  getPromise(): Promise<string> {\n    return this.promise;\n  }\n}\n\nclass _Expectation {\n  url: string;\n  response: string;\n  constructor(url: string, response: string) {\n    this.url = url;\n    this.response = response;\n  }\n}\n\nfunction remove<T>(list: T[], el: T): void {\n  const index = list.indexOf(el);\n  if (index > -1) {\n    list.splice(index, 1);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {core, ElementSchemaRegistry} from '@angular/compiler';\n\nexport class MockSchemaRegistry implements ElementSchemaRegistry {\n  constructor(\n      public existingProperties: {[key: string]: boolean},\n      public attrPropMapping: {[key: string]: string},\n      public existingElements: {[key: string]: boolean}, public invalidProperties: Array<string>,\n      public invalidAttributes: Array<string>) {}\n\n  hasProperty(tagName: string, property: string, schemas: core.SchemaMetadata[]): boolean {\n    const value = this.existingProperties[property];\n    return value === void 0 ? true : value;\n  }\n\n  hasElement(tagName: string, schemaMetas: core.SchemaMetadata[]): boolean {\n    const value = this.existingElements[tagName.toLowerCase()];\n    return value === void 0 ? true : value;\n  }\n\n  allKnownElementNames(): string[] {\n    return Object.keys(this.existingElements);\n  }\n\n  securityContext(selector: string, property: string, isAttribute: boolean): core.SecurityContext {\n    return core.SecurityContext.NONE;\n  }\n\n  getMappedPropName(attrName: string): string {\n    return this.attrPropMapping[attrName] || attrName;\n  }\n\n  getDefaultComponentElementName(): string {\n    return 'ng-component';\n  }\n\n  validateProperty(name: string): {error: boolean, msg?: string} {\n    if (this.invalidProperties.indexOf(name) > -1) {\n      return {error: true, msg: `Binding to property '${name}' is disallowed for security reasons`};\n    } else {\n      return {error: false};\n    }\n  }\n\n  validateAttribute(name: string): {error: boolean, msg?: string} {\n    if (this.invalidAttributes.indexOf(name) > -1) {\n      return {\n        error: true,\n        msg: `Binding to attribute '${name}' is disallowed for security reasons`\n      };\n    } else {\n      return {error: false};\n    }\n  }\n\n  normalizeAnimationStyleProperty(propName: string): string {\n    return propName;\n  }\n  normalizeAnimationStyleValue(camelCaseProp: string, userProvidedProp: string, val: string|number):\n      {error: string, value: string} {\n    return {error: null!, value: val.toString()};\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {CompileReflector, core, DirectiveResolver} from '@angular/compiler';\n\n/**\n * An implementation of {@link DirectiveResolver} that allows overriding\n * various properties of directives.\n */\nexport class MockDirectiveResolver extends DirectiveResolver {\n  private _directives = new Map<core.Type, core.Directive>();\n\n  constructor(reflector: CompileReflector) {\n    super(reflector);\n  }\n\n  resolve(type: core.Type): core.Directive;\n  resolve(type: core.Type, throwIfNotFound: true): core.Directive;\n  resolve(type: core.Type, throwIfNotFound: boolean): core.Directive|null;\n  resolve(type: core.Type, throwIfNotFound = true): core.Directive|null {\n    return this._directives.get(type) || super.resolve(type, throwIfNotFound);\n  }\n\n  /**\n   * Overrides the {@link core.Directive} for a directive.\n   */\n  setDirective(type: core.Type, metadata: core.Directive): void {\n    this._directives.set(type, metadata);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileReflector, core, NgModuleResolver} from '@angular/compiler';\n\nexport class MockNgModuleResolver extends NgModuleResolver {\n  private _ngModules = new Map<core.Type, core.NgModule>();\n\n  constructor(reflector: CompileReflector) {\n    super(reflector);\n  }\n\n  /**\n   * Overrides the {@link NgModule} for a module.\n   */\n  setNgModule(type: core.Type, metadata: core.NgModule): void {\n    this._ngModules.set(type, metadata);\n  }\n\n  /**\n   * Returns the {@link NgModule} for a module:\n   * - Set the {@link NgModule} to the overridden view when it exists or fallback to the\n   * default\n   * `NgModuleResolver`, see `setNgModule`.\n   */\n  resolve(type: core.Type, throwIfNotFound = true): core.NgModule {\n    return this._ngModules.get(type) || super.resolve(type, throwIfNotFound)!;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileReflector, core, PipeResolver} from '@angular/compiler';\n\nexport class MockPipeResolver extends PipeResolver {\n  private _pipes = new Map<core.Type, core.Pipe>();\n\n  constructor(refector: CompileReflector) {\n    super(refector);\n  }\n\n  /**\n   * Overrides the {@link Pipe} for a pipe.\n   */\n  setPipe(type: core.Type, metadata: core.Pipe): void {\n    this._pipes.set(type, metadata);\n  }\n\n  /**\n   * Returns the {@link Pipe} for a pipe:\n   * - Set the {@link Pipe} to the overridden view when it exists or fallback to the\n   * default\n   * `PipeResolver`, see `setPipe`.\n   */\n  resolve(type: core.Type, throwIfNotFound = true): core.Pipe {\n    let metadata = this._pipes.get(type);\n    if (!metadata) {\n      metadata = super.resolve(type, throwIfNotFound)!;\n    }\n    return metadata;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all APIs of the compiler package.\n *\n * <div class=\"callout is-critical\">\n *   <header>Unstable APIs</header>\n *   <p>\n *     All compiler apis are currently considered experimental and private!\n *   </p>\n *   <p>\n *     We expect the APIs in this package to keep on changing. Do not rely on them.\n *   </p>\n * </div>\n */\nexport * from './resource_loader_mock';\nexport * from './schema_registry_mock';\nexport * from './directive_resolver_mock';\nexport * from './ng_module_resolver_mock';\nexport * from './pipe_resolver_mock';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/// <reference types=\"node\" />\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport * from './src/testing';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}