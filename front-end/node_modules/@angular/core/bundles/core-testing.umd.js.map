{"version":3,"file":"core-testing.umd.js","sources":["../../../../../../packages/core/testing/src/async_fallback.ts","../../../../../../packages/core/testing/src/async.ts","../../../../../../packages/core/testing/src/component_fixture.ts","../../../../../../packages/core/testing/src/fake_async_fallback.ts","../../../../../../packages/core/testing/src/fake_async.ts","../../../../../external/npm/node_modules/tslib/tslib.es6.js","../../../../../../packages/core/testing/src/async_test_completer.ts","../../../../../packages/core/src/metadata/resource_loading.ts","../../../../../../packages/core/testing/src/metadata_overrider.ts","../../../../../../packages/core/testing/src/resolvers.ts","../../../../../../packages/core/testing/src/r3_test_bed_compiler.ts","../../../../../../packages/core/testing/src/test_bed_common.ts","../../../../../../packages/core/testing/src/r3_test_bed.ts","../../../../../../packages/core/testing/src/test_compiler.ts","../../../../../../packages/core/testing/src/test_bed.ts","../../../../../../packages/core/testing/src/before_each.ts","../../../../../../packages/core/testing/src/private_export_testing.ts","../../../../../../packages/core/testing/src/testing.ts","../../../../../../packages/core/testing/public_api.ts","../../../../../../packages/core/testing/index.ts","../../../../../../packages/core/testing/testing.ts"],"names":["getDebugNode","RendererFactory2","_Zone","stringify","ReflectionCapabilities","Directive","Component","Pipe","NgModule","getInjectableDef","NG_COMP_DEF","ResourceLoader","NgModuleRef","ApplicationInitStatus","LOCALE_ID","DEFAULT_LOCALE_ID","setLocaleId","ComponentFactory","compileComponent","NG_DIR_DEF","compileDirective","NG_PIPE_DEF","compilePipe","NG_MOD_DEF","transitiveScopesFor","patchComponentDefWithScope","NG_INJ_DEF","compileNgModuleDefs","NgZone","Compiler","COMPILER_OPTIONS","R3NgModuleFactory","ModuleWithComponentFactories","InjectionToken","Injector","InjectFlags","resetCompiledComponents","flushModuleScopingQueueAsMuchAsPossible","Injectable","_nextRootElementId","clearOverrides","overrideComponentView","INJECTOR_SCOPE","Optional","SkipSelf","overrideProvider","ivyEnabled","testBed","_global"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * async has been moved to zone.js\n * this file is for fallback in case old version of zone.js is used\n */\ndeclare var global: any;\n\nconst _global = <any>(typeof window === 'undefined' ? global : window);\n\n/**\n * Wraps a test function in an asynchronous test zone. The test will automatically\n * complete when all asynchronous calls within this zone are done. Can be used\n * to wrap an {@link inject} call.\n *\n * Example:\n *\n * ```\n * it('...', async(inject([AClass], (object) => {\n *   object.doSomething.then(() => {\n *     expect(...);\n *   })\n * });\n * ```\n *\n *\n */\nexport function asyncFallback(fn: Function): (done: any) => any {\n  // If we're running using the Jasmine test framework, adapt to call the 'done'\n  // function when asynchronous activity is finished.\n  if (_global.jasmine) {\n    // Not using an arrow function to preserve context passed from call site\n    return function(this: unknown, done: any) {\n      if (!done) {\n        // if we run beforeEach in @angular/core/testing/testing_internal then we get no done\n        // fake it here and assume sync.\n        done = function() {};\n        done.fail = function(e: any) {\n          throw e;\n        };\n      }\n      runInTestZone(fn, this, done, (err: any) => {\n        if (typeof err === 'string') {\n          return done.fail(new Error(err));\n        } else {\n          done.fail(err);\n        }\n      });\n    };\n  }\n  // Otherwise, return a promise which will resolve when asynchronous activity\n  // is finished. This will be correctly consumed by the Mocha framework with\n  // it('...', async(myFn)); or can be used in a custom framework.\n  // Not using an arrow function to preserve context passed from call site\n  return function(this: unknown) {\n    return new Promise<void>((finishCallback, failCallback) => {\n      runInTestZone(fn, this, finishCallback, failCallback);\n    });\n  };\n}\n\nfunction runInTestZone(\n    fn: Function, context: any, finishCallback: Function, failCallback: Function) {\n  const currentZone = Zone.current;\n  const AsyncTestZoneSpec = (Zone as any)['AsyncTestZoneSpec'];\n  if (AsyncTestZoneSpec === undefined) {\n    throw new Error(\n        'AsyncTestZoneSpec is needed for the async() test helper but could not be found. ' +\n        'Please make sure that your environment includes zone.js/dist/async-test.js');\n  }\n  const ProxyZoneSpec = (Zone as any)['ProxyZoneSpec'] as {\n    get(): {setDelegate(spec: ZoneSpec): void; getDelegate(): ZoneSpec;};\n    assertPresent: () => void;\n  };\n  if (ProxyZoneSpec === undefined) {\n    throw new Error(\n        'ProxyZoneSpec is needed for the async() test helper but could not be found. ' +\n        'Please make sure that your environment includes zone.js/dist/proxy.js');\n  }\n  const proxyZoneSpec = ProxyZoneSpec.get();\n  ProxyZoneSpec.assertPresent();\n  // We need to create the AsyncTestZoneSpec outside the ProxyZone.\n  // If we do it in ProxyZone then we will get to infinite recursion.\n  const proxyZone = Zone.current.getZoneWith('ProxyZoneSpec');\n  const previousDelegate = proxyZoneSpec.getDelegate();\n  proxyZone!.parent!.run(() => {\n    const testZoneSpec: ZoneSpec = new AsyncTestZoneSpec(\n        () => {\n          // Need to restore the original zone.\n          currentZone.run(() => {\n            if (proxyZoneSpec.getDelegate() == testZoneSpec) {\n              // Only reset the zone spec if it's sill this one. Otherwise, assume it's OK.\n              proxyZoneSpec.setDelegate(previousDelegate);\n            }\n            finishCallback();\n          });\n        },\n        (error: any) => {\n          // Need to restore the original zone.\n          currentZone.run(() => {\n            if (proxyZoneSpec.getDelegate() == testZoneSpec) {\n              // Only reset the zone spec if it's sill this one. Otherwise, assume it's OK.\n              proxyZoneSpec.setDelegate(previousDelegate);\n            }\n            failCallback(error);\n          });\n        },\n        'test');\n    proxyZoneSpec.setDelegate(testZoneSpec);\n  });\n  return Zone.current.runGuarded(fn, context);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {asyncFallback} from './async_fallback';\n\n/**\n * Wraps a test function in an asynchronous test zone. The test will automatically\n * complete when all asynchronous calls within this zone are done. Can be used\n * to wrap an {@link inject} call.\n *\n * Example:\n *\n * ```\n * it('...', async(inject([AClass], (object) => {\n *   object.doSomething.then(() => {\n *     expect(...);\n *   })\n * });\n * ```\n *\n * @publicApi\n */\nexport function async(fn: Function): (done: any) => any {\n  const _Zone: any = typeof Zone !== 'undefined' ? Zone : null;\n  if (!_Zone) {\n    return function() {\n      return Promise.reject(\n          'Zone is needed for the async() test helper but could not be found. ' +\n          'Please make sure that your environment includes zone.js/dist/zone.js');\n    };\n  }\n  const asyncTest = _Zone && _Zone[_Zone.__symbol__('asyncTest')];\n  if (typeof asyncTest === 'function') {\n    return asyncTest(fn);\n  }\n  // not using new version of zone.js\n  // TODO @JiaLiPassion, remove this after all library updated to\n  // newest version of zone.js(0.8.25)\n  return asyncFallback(fn);\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef, ComponentRef, DebugElement, ElementRef, getDebugNode, NgZone, RendererFactory2} from '@angular/core';\n\n\n/**\n * Fixture for debugging and testing a component.\n *\n * @publicApi\n */\nexport class ComponentFixture<T> {\n  /**\n   * The DebugElement associated with the root element of this component.\n   */\n  debugElement: DebugElement;\n\n  /**\n   * The instance of the root component class.\n   */\n  componentInstance: T;\n\n  /**\n   * The native element at the root of the component.\n   */\n  nativeElement: any;\n\n  /**\n   * The ElementRef for the element at the root of the component.\n   */\n  elementRef: ElementRef;\n\n  /**\n   * The ChangeDetectorRef for the component\n   */\n  changeDetectorRef: ChangeDetectorRef;\n\n  private _renderer: RendererFactory2|null|undefined;\n  private _isStable: boolean = true;\n  private _isDestroyed: boolean = false;\n  private _resolve: ((result: any) => void)|null = null;\n  private _promise: Promise<any>|null = null;\n  private _onUnstableSubscription: any /** TODO #9100 */ = null;\n  private _onStableSubscription: any /** TODO #9100 */ = null;\n  private _onMicrotaskEmptySubscription: any /** TODO #9100 */ = null;\n  private _onErrorSubscription: any /** TODO #9100 */ = null;\n\n  constructor(\n      public componentRef: ComponentRef<T>, public ngZone: NgZone|null,\n      private _autoDetect: boolean) {\n    this.changeDetectorRef = componentRef.changeDetectorRef;\n    this.elementRef = componentRef.location;\n    this.debugElement = <DebugElement>getDebugNode(this.elementRef.nativeElement);\n    this.componentInstance = componentRef.instance;\n    this.nativeElement = this.elementRef.nativeElement;\n    this.componentRef = componentRef;\n    this.ngZone = ngZone;\n\n    if (ngZone) {\n      // Create subscriptions outside the NgZone so that the callbacks run oustide\n      // of NgZone.\n      ngZone.runOutsideAngular(() => {\n        this._onUnstableSubscription = ngZone.onUnstable.subscribe({\n          next: () => {\n            this._isStable = false;\n          }\n        });\n        this._onMicrotaskEmptySubscription = ngZone.onMicrotaskEmpty.subscribe({\n          next: () => {\n            if (this._autoDetect) {\n              // Do a change detection run with checkNoChanges set to true to check\n              // there are no changes on the second run.\n              this.detectChanges(true);\n            }\n          }\n        });\n        this._onStableSubscription = ngZone.onStable.subscribe({\n          next: () => {\n            this._isStable = true;\n            // Check whether there is a pending whenStable() completer to resolve.\n            if (this._promise !== null) {\n              // If so check whether there are no pending macrotasks before resolving.\n              // Do this check in the next tick so that ngZone gets a chance to update the state of\n              // pending macrotasks.\n              scheduleMicroTask(() => {\n                if (!ngZone.hasPendingMacrotasks) {\n                  if (this._promise !== null) {\n                    this._resolve!(true);\n                    this._resolve = null;\n                    this._promise = null;\n                  }\n                }\n              });\n            }\n          }\n        });\n\n        this._onErrorSubscription = ngZone.onError.subscribe({\n          next: (error: any) => {\n            throw error;\n          }\n        });\n      });\n    }\n  }\n\n  private _tick(checkNoChanges: boolean) {\n    this.changeDetectorRef.detectChanges();\n    if (checkNoChanges) {\n      this.checkNoChanges();\n    }\n  }\n\n  /**\n   * Trigger a change detection cycle for the component.\n   */\n  detectChanges(checkNoChanges: boolean = true): void {\n    if (this.ngZone != null) {\n      // Run the change detection inside the NgZone so that any async tasks as part of the change\n      // detection are captured by the zone and can be waited for in isStable.\n      this.ngZone.run(() => {\n        this._tick(checkNoChanges);\n      });\n    } else {\n      // Running without zone. Just do the change detection.\n      this._tick(checkNoChanges);\n    }\n  }\n\n  /**\n   * Do a change detection run to make sure there were no changes.\n   */\n  checkNoChanges(): void {\n    this.changeDetectorRef.checkNoChanges();\n  }\n\n  /**\n   * Set whether the fixture should autodetect changes.\n   *\n   * Also runs detectChanges once so that any existing change is detected.\n   */\n  autoDetectChanges(autoDetect: boolean = true) {\n    if (this.ngZone == null) {\n      throw new Error('Cannot call autoDetectChanges when ComponentFixtureNoNgZone is set');\n    }\n    this._autoDetect = autoDetect;\n    this.detectChanges();\n  }\n\n  /**\n   * Return whether the fixture is currently stable or has async tasks that have not been completed\n   * yet.\n   */\n  isStable(): boolean {\n    return this._isStable && !this.ngZone!.hasPendingMacrotasks;\n  }\n\n  /**\n   * Get a promise that resolves when the fixture is stable.\n   *\n   * This can be used to resume testing after events have triggered asynchronous activity or\n   * asynchronous change detection.\n   */\n  whenStable(): Promise<any> {\n    if (this.isStable()) {\n      return Promise.resolve(false);\n    } else if (this._promise !== null) {\n      return this._promise;\n    } else {\n      this._promise = new Promise(res => {\n        this._resolve = res;\n      });\n      return this._promise;\n    }\n  }\n\n\n  private _getRenderer() {\n    if (this._renderer === undefined) {\n      this._renderer = this.componentRef.injector.get(RendererFactory2, null);\n    }\n    return this._renderer as RendererFactory2 | null;\n  }\n\n  /**\n   * Get a promise that resolves when the ui state is stable following animations.\n   */\n  whenRenderingDone(): Promise<any> {\n    const renderer = this._getRenderer();\n    if (renderer && renderer.whenRenderingDone) {\n      return renderer.whenRenderingDone();\n    }\n    return this.whenStable();\n  }\n\n  /**\n   * Trigger component destruction.\n   */\n  destroy(): void {\n    if (!this._isDestroyed) {\n      this.componentRef.destroy();\n      if (this._onUnstableSubscription != null) {\n        this._onUnstableSubscription.unsubscribe();\n        this._onUnstableSubscription = null;\n      }\n      if (this._onStableSubscription != null) {\n        this._onStableSubscription.unsubscribe();\n        this._onStableSubscription = null;\n      }\n      if (this._onMicrotaskEmptySubscription != null) {\n        this._onMicrotaskEmptySubscription.unsubscribe();\n        this._onMicrotaskEmptySubscription = null;\n      }\n      if (this._onErrorSubscription != null) {\n        this._onErrorSubscription.unsubscribe();\n        this._onErrorSubscription = null;\n      }\n      this._isDestroyed = true;\n    }\n  }\n}\n\nfunction scheduleMicroTask(fn: Function) {\n  Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * fakeAsync has been moved to zone.js\n * this file is for fallback in case old version of zone.js is used\n */\nconst _Zone: any = typeof Zone !== 'undefined' ? Zone : null;\nconst FakeAsyncTestZoneSpec = _Zone && _Zone['FakeAsyncTestZoneSpec'];\ntype ProxyZoneSpec = {\n  setDelegate(delegateSpec: ZoneSpec): void; getDelegate(): ZoneSpec; resetDelegate(): void;\n};\nconst ProxyZoneSpec: {get(): ProxyZoneSpec; assertPresent: () => ProxyZoneSpec} =\n    _Zone && _Zone['ProxyZoneSpec'];\n\nlet _fakeAsyncTestZoneSpec: any = null;\n\n/**\n * Clears out the shared fake async zone for a test.\n * To be called in a global `beforeEach`.\n *\n * @publicApi\n */\nexport function resetFakeAsyncZoneFallback() {\n  _fakeAsyncTestZoneSpec = null;\n  // in node.js testing we may not have ProxyZoneSpec in which case there is nothing to reset.\n  ProxyZoneSpec && ProxyZoneSpec.assertPresent().resetDelegate();\n}\n\nlet _inFakeAsyncCall = false;\n\n/**\n * Wraps a function to be executed in the fakeAsync zone:\n * - microtasks are manually executed by calling `flushMicrotasks()`,\n * - timers are synchronous, `tick()` simulates the asynchronous passage of time.\n *\n * If there are any pending timers at the end of the function, an exception will be thrown.\n *\n * Can be used to wrap inject() calls.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/testing/ts/fake_async.ts region='basic'}\n *\n * @param fn\n * @returns The function wrapped to be executed in the fakeAsync zone\n *\n * @publicApi\n */\nexport function fakeAsyncFallback(fn: Function): (...args: any[]) => any {\n  // Not using an arrow function to preserve context passed from call site\n  return function(this: unknown, ...args: any[]) {\n    const proxyZoneSpec = ProxyZoneSpec.assertPresent();\n    if (_inFakeAsyncCall) {\n      throw new Error('fakeAsync() calls can not be nested');\n    }\n    _inFakeAsyncCall = true;\n    try {\n      if (!_fakeAsyncTestZoneSpec) {\n        if (proxyZoneSpec.getDelegate() instanceof FakeAsyncTestZoneSpec) {\n          throw new Error('fakeAsync() calls can not be nested');\n        }\n\n        _fakeAsyncTestZoneSpec = new FakeAsyncTestZoneSpec();\n      }\n\n      let res: any;\n      const lastProxyZoneSpec = proxyZoneSpec.getDelegate();\n      proxyZoneSpec.setDelegate(_fakeAsyncTestZoneSpec);\n      try {\n        res = fn.apply(this, args);\n        flushMicrotasksFallback();\n      } finally {\n        proxyZoneSpec.setDelegate(lastProxyZoneSpec);\n      }\n\n      if (_fakeAsyncTestZoneSpec.pendingPeriodicTimers.length > 0) {\n        throw new Error(\n            `${_fakeAsyncTestZoneSpec.pendingPeriodicTimers.length} ` +\n            `periodic timer(s) still in the queue.`);\n      }\n\n      if (_fakeAsyncTestZoneSpec.pendingTimers.length > 0) {\n        throw new Error(\n            `${_fakeAsyncTestZoneSpec.pendingTimers.length} timer(s) still in the queue.`);\n      }\n      return res;\n    } finally {\n      _inFakeAsyncCall = false;\n      resetFakeAsyncZoneFallback();\n    }\n  };\n}\n\nfunction _getFakeAsyncZoneSpec(): any {\n  if (_fakeAsyncTestZoneSpec == null) {\n    throw new Error('The code should be running in the fakeAsync zone to call this function');\n  }\n  return _fakeAsyncTestZoneSpec;\n}\n\n/**\n * Simulates the asynchronous passage of time for the timers in the fakeAsync zone.\n *\n * The microtasks queue is drained at the very start of this function and after any timer callback\n * has been executed.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/testing/ts/fake_async.ts region='basic'}\n *\n * @publicApi\n */\nexport function tickFallback(\n    millis: number = 0, tickOptions: {processNewMacroTasksSynchronously: boolean} = {\n      processNewMacroTasksSynchronously: true\n    }): void {\n  _getFakeAsyncZoneSpec().tick(millis, null, tickOptions);\n}\n\n/**\n * Simulates the asynchronous passage of time for the timers in the fakeAsync zone by\n * draining the macrotask queue until it is empty. The returned value is the milliseconds\n * of time that would have been elapsed.\n *\n * @param maxTurns\n * @returns The simulated time elapsed, in millis.\n *\n * @publicApi\n */\nexport function flushFallback(maxTurns?: number): number {\n  return _getFakeAsyncZoneSpec().flush(maxTurns);\n}\n\n/**\n * Discard all remaining periodic tasks.\n *\n * @publicApi\n */\nexport function discardPeriodicTasksFallback(): void {\n  const zoneSpec = _getFakeAsyncZoneSpec();\n  zoneSpec.pendingPeriodicTimers.length = 0;\n}\n\n/**\n * Flush any pending microtasks.\n *\n * @publicApi\n */\nexport function flushMicrotasksFallback(): void {\n  _getFakeAsyncZoneSpec().flushMicrotasks();\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {discardPeriodicTasksFallback, fakeAsyncFallback, flushFallback, flushMicrotasksFallback, resetFakeAsyncZoneFallback, tickFallback} from './fake_async_fallback';\n\nconst _Zone: any = typeof Zone !== 'undefined' ? Zone : null;\nconst fakeAsyncTestModule = _Zone && _Zone[_Zone.__symbol__('fakeAsyncTest')];\n\n/**\n * Clears out the shared fake async zone for a test.\n * To be called in a global `beforeEach`.\n *\n * @publicApi\n */\nexport function resetFakeAsyncZone(): void {\n  if (fakeAsyncTestModule) {\n    return fakeAsyncTestModule.resetFakeAsyncZone();\n  } else {\n    return resetFakeAsyncZoneFallback();\n  }\n}\n\n/**\n * Wraps a function to be executed in the fakeAsync zone:\n * - microtasks are manually executed by calling `flushMicrotasks()`,\n * - timers are synchronous, `tick()` simulates the asynchronous passage of time.\n *\n * If there are any pending timers at the end of the function, an exception will be thrown.\n *\n * Can be used to wrap inject() calls.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/testing/ts/fake_async.ts region='basic'}\n *\n * @param fn\n * @returns The function wrapped to be executed in the fakeAsync zone\n *\n * @publicApi\n */\nexport function fakeAsync(fn: Function): (...args: any[]) => any {\n  if (fakeAsyncTestModule) {\n    return fakeAsyncTestModule.fakeAsync(fn);\n  } else {\n    return fakeAsyncFallback(fn);\n  }\n}\n\n/**\n * Simulates the asynchronous passage of time for the timers in the fakeAsync zone.\n *\n * The microtasks queue is drained at the very start of this function and after any timer callback\n * has been executed.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/testing/ts/fake_async.ts region='basic'}\n *\n * @param millis, the number of millisecond to advance the virtual timer\n * @param tickOptions, the options of tick with a flag called\n * processNewMacroTasksSynchronously, whether to invoke the new macroTasks, by default is\n * false, means the new macroTasks will be invoked\n *\n * For example,\n *\n * it ('test with nested setTimeout', fakeAsync(() => {\n *   let nestedTimeoutInvoked = false;\n *   function funcWithNestedTimeout() {\n *     setTimeout(() => {\n *       nestedTimeoutInvoked = true;\n *     });\n *   };\n *   setTimeout(funcWithNestedTimeout);\n *   tick();\n *   expect(nestedTimeoutInvoked).toBe(true);\n * }));\n *\n * in this case, we have a nested timeout (new macroTask), when we tick, both the\n * funcWithNestedTimeout and the nested timeout both will be invoked.\n *\n * it ('test with nested setTimeout', fakeAsync(() => {\n *   let nestedTimeoutInvoked = false;\n *   function funcWithNestedTimeout() {\n *     setTimeout(() => {\n *       nestedTimeoutInvoked = true;\n *     });\n *   };\n *   setTimeout(funcWithNestedTimeout);\n *   tick(0, {processNewMacroTasksSynchronously: false});\n *   expect(nestedTimeoutInvoked).toBe(false);\n * }));\n *\n * if we pass the tickOptions with processNewMacroTasksSynchronously to be false, the nested timeout\n * will not be invoked.\n *\n *\n * @publicApi\n */\nexport function tick(\n    millis: number = 0, tickOptions: {processNewMacroTasksSynchronously: boolean} = {\n      processNewMacroTasksSynchronously: true\n    }): void {\n  if (fakeAsyncTestModule) {\n    return fakeAsyncTestModule.tick(millis, tickOptions);\n  } else {\n    return tickFallback(millis, tickOptions);\n  }\n}\n\n/**\n * Simulates the asynchronous passage of time for the timers in the fakeAsync zone by\n * draining the macrotask queue until it is empty. The returned value is the milliseconds\n * of time that would have been elapsed.\n *\n * @param maxTurns\n * @returns The simulated time elapsed, in millis.\n *\n * @publicApi\n */\nexport function flush(maxTurns?: number): number {\n  if (fakeAsyncTestModule) {\n    return fakeAsyncTestModule.flush(maxTurns);\n  } else {\n    return flushFallback(maxTurns);\n  }\n}\n\n/**\n * Discard all remaining periodic tasks.\n *\n * @publicApi\n */\nexport function discardPeriodicTasks(): void {\n  if (fakeAsyncTestModule) {\n    return fakeAsyncTestModule.discardPeriodicTasks();\n  } else {\n    discardPeriodicTasksFallback();\n  }\n}\n\n/**\n * Flush any pending microtasks.\n *\n * @publicApi\n */\nexport function flushMicrotasks(): void {\n  if (fakeAsyncTestModule) {\n    return fakeAsyncTestModule.flushMicrotasks();\n  } else {\n    return flushMicrotasksFallback();\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injectable completer that allows signaling completion of an asynchronous test. Used internally.\n */\nexport class AsyncTestCompleter {\n  // TODO(issue/24571): remove '!'.\n  private _resolve!: (result: any) => void;\n  // TODO(issue/24571): remove '!'.\n  private _reject!: (err: any) => void;\n  private _promise: Promise<any> = new Promise((res, rej) => {\n    this._resolve = res;\n    this._reject = rej;\n  });\n  done(value?: any) {\n    this._resolve(value);\n  }\n\n  fail(error?: any, stackTrace?: string) {\n    this._reject(error);\n  }\n\n  get promise(): Promise<any> {\n    return this._promise;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../interface/type';\nimport {Component} from './directives';\n\n\n/**\n * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n *\n * Example:\n * ```\n * @Component({\n *   selector: 'my-comp',\n *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n * })\n * class MyComponent{\n * }\n *\n * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n *\n * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n *\n * // Use browser's `fetch()` function as the default resource resolution strategy.\n * resolveComponentResources(fetch).then(() => {\n *   // After resolution all URLs have been converted into `template` strings.\n *   renderComponent(MyComponent);\n * });\n *\n * ```\n *\n * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n * to call this method outside JIT mode.\n *\n * @param resourceResolver a function which is responsible for returning a `Promise` to the\n * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n */\nexport function resolveComponentResources(\n    resourceResolver: (url: string) => (Promise<string|{text(): Promise<string>}>)): Promise<void> {\n  // Store all promises which are fetching the resources.\n  const componentResolved: Promise<void>[] = [];\n\n  // Cache so that we don't fetch the same resource more than once.\n  const urlMap = new Map<string, Promise<string>>();\n  function cachedResourceResolve(url: string): Promise<string> {\n    let promise = urlMap.get(url);\n    if (!promise) {\n      const resp = resourceResolver(url);\n      urlMap.set(url, promise = resp.then(unwrapResponse));\n    }\n    return promise;\n  }\n\n  componentResourceResolutionQueue.forEach((component: Component, type: Type<any>) => {\n    const promises: Promise<void>[] = [];\n    if (component.templateUrl) {\n      promises.push(cachedResourceResolve(component.templateUrl).then((template) => {\n        component.template = template;\n      }));\n    }\n    const styleUrls = component.styleUrls;\n    const styles = component.styles || (component.styles = []);\n    const styleOffset = component.styles.length;\n    styleUrls && styleUrls.forEach((styleUrl, index) => {\n      styles.push('');  // pre-allocate array.\n      promises.push(cachedResourceResolve(styleUrl).then((style) => {\n        styles[styleOffset + index] = style;\n        styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n        if (styleUrls.length == 0) {\n          component.styleUrls = undefined;\n        }\n      }));\n    });\n    const fullyResolved = Promise.all(promises).then(() => componentDefResolved(type));\n    componentResolved.push(fullyResolved);\n  });\n  clearResolutionOfComponentResourcesQueue();\n  return Promise.all(componentResolved).then(() => undefined);\n}\n\nlet componentResourceResolutionQueue = new Map<Type<any>, Component>();\n\n// Track when existing ɵcmp for a Type is waiting on resources.\nconst componentDefPendingResolution = new Set<Type<any>>();\n\nexport function maybeQueueResolutionOfComponentResources(type: Type<any>, metadata: Component) {\n  if (componentNeedsResolution(metadata)) {\n    componentResourceResolutionQueue.set(type, metadata);\n    componentDefPendingResolution.add(type);\n  }\n}\n\nexport function isComponentDefPendingResolution(type: Type<any>): boolean {\n  return componentDefPendingResolution.has(type);\n}\n\nexport function componentNeedsResolution(component: Component): boolean {\n  return !!(\n      (component.templateUrl && !component.hasOwnProperty('template')) ||\n      component.styleUrls && component.styleUrls.length);\n}\nexport function clearResolutionOfComponentResourcesQueue(): Map<Type<any>, Component> {\n  const old = componentResourceResolutionQueue;\n  componentResourceResolutionQueue = new Map();\n  return old;\n}\n\nexport function restoreComponentResolutionQueue(queue: Map<Type<any>, Component>): void {\n  componentDefPendingResolution.clear();\n  queue.forEach((_, type) => componentDefPendingResolution.add(type));\n  componentResourceResolutionQueue = queue;\n}\n\nexport function isComponentResourceResolutionQueueEmpty() {\n  return componentResourceResolutionQueue.size === 0;\n}\n\nfunction unwrapResponse(response: string|{text(): Promise<string>}): string|Promise<string> {\n  return typeof response == 'string' ? response : response.text();\n}\n\nfunction componentDefResolved(type: Type<any>): void {\n  componentDefPendingResolution.delete(type);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵstringify as stringify} from '@angular/core';\nimport {MetadataOverride} from './metadata_override';\n\ntype StringMap = {\n  [key: string]: any\n};\n\nlet _nextReferenceId = 0;\n\nexport class MetadataOverrider {\n  private _references = new Map<any, string>();\n  /**\n   * Creates a new instance for the given metadata class\n   * based on an old instance and overrides.\n   */\n  overrideMetadata<C extends T, T>(\n      metadataClass: {new(options: T): C;}, oldMetadata: C, override: MetadataOverride<T>): C {\n    const props: StringMap = {};\n    if (oldMetadata) {\n      _valueProps(oldMetadata).forEach((prop) => props[prop] = (<any>oldMetadata)[prop]);\n    }\n\n    if (override.set) {\n      if (override.remove || override.add) {\n        throw new Error(`Cannot set and add/remove ${stringify(metadataClass)} at the same time!`);\n      }\n      setMetadata(props, override.set);\n    }\n    if (override.remove) {\n      removeMetadata(props, override.remove, this._references);\n    }\n    if (override.add) {\n      addMetadata(props, override.add);\n    }\n    return new metadataClass(<any>props);\n  }\n}\n\nfunction removeMetadata(metadata: StringMap, remove: any, references: Map<any, string>) {\n  const removeObjects = new Set<string>();\n  for (const prop in remove) {\n    const removeValue = remove[prop];\n    if (Array.isArray(removeValue)) {\n      removeValue.forEach((value: any) => {\n        removeObjects.add(_propHashKey(prop, value, references));\n      });\n    } else {\n      removeObjects.add(_propHashKey(prop, removeValue, references));\n    }\n  }\n\n  for (const prop in metadata) {\n    const propValue = metadata[prop];\n    if (Array.isArray(propValue)) {\n      metadata[prop] = propValue.filter(\n          (value: any) => !removeObjects.has(_propHashKey(prop, value, references)));\n    } else {\n      if (removeObjects.has(_propHashKey(prop, propValue, references))) {\n        metadata[prop] = undefined;\n      }\n    }\n  }\n}\n\nfunction addMetadata(metadata: StringMap, add: any) {\n  for (const prop in add) {\n    const addValue = add[prop];\n    const propValue = metadata[prop];\n    if (propValue != null && Array.isArray(propValue)) {\n      metadata[prop] = propValue.concat(addValue);\n    } else {\n      metadata[prop] = addValue;\n    }\n  }\n}\n\nfunction setMetadata(metadata: StringMap, set: any) {\n  for (const prop in set) {\n    metadata[prop] = set[prop];\n  }\n}\n\nfunction _propHashKey(propName: any, propValue: any, references: Map<any, string>): string {\n  const replacer = (key: any, value: any) => {\n    if (typeof value === 'function') {\n      value = _serializeReference(value, references);\n    }\n    return value;\n  };\n\n  return `${propName}:${JSON.stringify(propValue, replacer)}`;\n}\n\nfunction _serializeReference(ref: any, references: Map<any, string>): string {\n  let id = references.get(ref);\n  if (!id) {\n    id = `${stringify(ref)}${_nextReferenceId++}`;\n    references.set(ref, id);\n  }\n  return id;\n}\n\n\nfunction _valueProps(obj: any): string[] {\n  const props: string[] = [];\n  // regular public props\n  Object.keys(obj).forEach((prop) => {\n    if (!prop.startsWith('_')) {\n      props.push(prop);\n    }\n  });\n\n  // getters\n  let proto = obj;\n  while (proto = Object.getPrototypeOf(proto)) {\n    Object.keys(proto).forEach((protoProp) => {\n      const desc = Object.getOwnPropertyDescriptor(proto, protoProp);\n      if (!protoProp.startsWith('_') && desc && 'get' in desc) {\n        props.push(protoProp);\n      }\n    });\n  }\n  return props;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Component, Directive, NgModule, Pipe, Type, ɵReflectionCapabilities as ReflectionCapabilities} from '@angular/core';\n\nimport {MetadataOverride} from './metadata_override';\nimport {MetadataOverrider} from './metadata_overrider';\n\nconst reflection = new ReflectionCapabilities();\n\n/**\n * Base interface to resolve `@Component`, `@Directive`, `@Pipe` and `@NgModule`.\n */\nexport interface Resolver<T> {\n  addOverride(type: Type<any>, override: MetadataOverride<T>): void;\n  setOverrides(overrides: Array<[Type<any>, MetadataOverride<T>]>): void;\n  resolve(type: Type<any>): T|null;\n}\n\n/**\n * Allows to override ivy metadata for tests (via the `TestBed`).\n */\nabstract class OverrideResolver<T> implements Resolver<T> {\n  private overrides = new Map<Type<any>, MetadataOverride<T>[]>();\n  private resolved = new Map<Type<any>, T|null>();\n\n  abstract get type(): any;\n\n  addOverride(type: Type<any>, override: MetadataOverride<T>) {\n    const overrides = this.overrides.get(type) || [];\n    overrides.push(override);\n    this.overrides.set(type, overrides);\n    this.resolved.delete(type);\n  }\n\n  setOverrides(overrides: Array<[Type<any>, MetadataOverride<T>]>) {\n    this.overrides.clear();\n    overrides.forEach(([type, override]) => {\n      this.addOverride(type, override);\n    });\n  }\n\n  getAnnotation(type: Type<any>): T|null {\n    const annotations = reflection.annotations(type);\n    // Try to find the nearest known Type annotation and make sure that this annotation is an\n    // instance of the type we are looking for, so we can use it for resolution. Note: there might\n    // be multiple known annotations found due to the fact that Components can extend Directives (so\n    // both Directive and Component annotations would be present), so we always check if the known\n    // annotation has the right type.\n    for (let i = annotations.length - 1; i >= 0; i--) {\n      const annotation = annotations[i];\n      const isKnownType = annotation instanceof Directive || annotation instanceof Component ||\n          annotation instanceof Pipe || annotation instanceof NgModule;\n      if (isKnownType) {\n        return annotation instanceof this.type ? annotation : null;\n      }\n    }\n    return null;\n  }\n\n  resolve(type: Type<any>): T|null {\n    let resolved = this.resolved.get(type) || null;\n\n    if (!resolved) {\n      resolved = this.getAnnotation(type);\n      if (resolved) {\n        const overrides = this.overrides.get(type);\n        if (overrides) {\n          const overrider = new MetadataOverrider();\n          overrides.forEach(override => {\n            resolved = overrider.overrideMetadata(this.type, resolved!, override);\n          });\n        }\n      }\n      this.resolved.set(type, resolved);\n    }\n\n    return resolved;\n  }\n}\n\n\nexport class DirectiveResolver extends OverrideResolver<Directive> {\n  get type() {\n    return Directive;\n  }\n}\n\nexport class ComponentResolver extends OverrideResolver<Component> {\n  get type() {\n    return Component;\n  }\n}\n\nexport class PipeResolver extends OverrideResolver<Pipe> {\n  get type() {\n    return Pipe;\n  }\n}\n\nexport class NgModuleResolver extends OverrideResolver<NgModule> {\n  get type() {\n    return NgModule;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ResourceLoader} from '@angular/compiler';\nimport {ApplicationInitStatus, Compiler, COMPILER_OPTIONS, Component, Directive, Injector, InjectorType, LOCALE_ID, ModuleWithComponentFactories, ModuleWithProviders, NgModule, NgModuleFactory, NgZone, Pipe, PlatformRef, Provider, Type, ɵcompileComponent as compileComponent, ɵcompileDirective as compileDirective, ɵcompileNgModuleDefs as compileNgModuleDefs, ɵcompilePipe as compilePipe, ɵDEFAULT_LOCALE_ID as DEFAULT_LOCALE_ID, ɵDirectiveDef as DirectiveDef, ɵgetInjectableDef as getInjectableDef, ɵNG_COMP_DEF as NG_COMP_DEF, ɵNG_DIR_DEF as NG_DIR_DEF, ɵNG_INJ_DEF as NG_INJ_DEF, ɵNG_MOD_DEF as NG_MOD_DEF, ɵNG_PIPE_DEF as NG_PIPE_DEF, ɵNgModuleFactory as R3NgModuleFactory, ɵNgModuleTransitiveScopes as NgModuleTransitiveScopes, ɵNgModuleType as NgModuleType, ɵpatchComponentDefWithScope as patchComponentDefWithScope, ɵRender3ComponentFactory as ComponentFactory, ɵRender3NgModuleRef as NgModuleRef, ɵsetLocaleId as setLocaleId, ɵtransitiveScopesFor as transitiveScopesFor, ɵɵInjectableDef as InjectableDef} from '@angular/core';\n\nimport {clearResolutionOfComponentResourcesQueue, isComponentDefPendingResolution, resolveComponentResources, restoreComponentResolutionQueue} from '../../src/metadata/resource_loading';\n\nimport {MetadataOverride} from './metadata_override';\nimport {ComponentResolver, DirectiveResolver, NgModuleResolver, PipeResolver, Resolver} from './resolvers';\nimport {TestModuleMetadata} from './test_bed_common';\n\nenum TestingModuleOverride {\n  DECLARATION,\n  OVERRIDE_TEMPLATE,\n}\n\nfunction isTestingModuleOverride(value: unknown): value is TestingModuleOverride {\n  return value === TestingModuleOverride.DECLARATION ||\n      value === TestingModuleOverride.OVERRIDE_TEMPLATE;\n}\n\n// Resolvers for Angular decorators\ntype Resolvers = {\n  module: Resolver<NgModule>,\n  component: Resolver<Directive>,\n  directive: Resolver<Component>,\n  pipe: Resolver<Pipe>,\n};\n\ninterface CleanupOperation {\n  fieldName: string;\n  object: any;\n  originalValue: unknown;\n}\n\nexport class R3TestBedCompiler {\n  private originalComponentResolutionQueue: Map<Type<any>, Component>|null = null;\n\n  // Testing module configuration\n  private declarations: Type<any>[] = [];\n  private imports: Type<any>[] = [];\n  private providers: Provider[] = [];\n  private schemas: any[] = [];\n\n  // Queues of components/directives/pipes that should be recompiled.\n  private pendingComponents = new Set<Type<any>>();\n  private pendingDirectives = new Set<Type<any>>();\n  private pendingPipes = new Set<Type<any>>();\n\n  // Keep track of all components and directives, so we can patch Providers onto defs later.\n  private seenComponents = new Set<Type<any>>();\n  private seenDirectives = new Set<Type<any>>();\n\n  // Keep track of overridden modules, so that we can collect all affected ones in the module tree.\n  private overriddenModules = new Set<NgModuleType<any>>();\n\n  // Store resolved styles for Components that have template overrides present and `styleUrls`\n  // defined at the same time.\n  private existingComponentStyles = new Map<Type<any>, string[]>();\n\n  private resolvers: Resolvers = initResolvers();\n\n  private componentToModuleScope = new Map<Type<any>, Type<any>|TestingModuleOverride>();\n\n  // Map that keeps initial version of component/directive/pipe defs in case\n  // we compile a Type again, thus overriding respective static fields. This is\n  // required to make sure we restore defs to their initial states between test runs\n  // TODO: we should support the case with multiple defs on a type\n  private initialNgDefs = new Map<Type<any>, [string, PropertyDescriptor|undefined]>();\n\n  // Array that keeps cleanup operations for initial versions of component/directive/pipe/module\n  // defs in case TestBed makes changes to the originals.\n  private defCleanupOps: CleanupOperation[] = [];\n\n  private _injector: Injector|null = null;\n  private compilerProviders: Provider[]|null = null;\n\n  private providerOverrides: Provider[] = [];\n  private rootProviderOverrides: Provider[] = [];\n  // Overrides for injectables with `{providedIn: SomeModule}` need to be tracked and added to that\n  // module's provider list.\n  private providerOverridesByModule = new Map<InjectorType<any>, Provider[]>();\n  private providerOverridesByToken = new Map<any, Provider>();\n  private moduleProvidersOverridden = new Set<Type<any>>();\n\n  private testModuleType: NgModuleType<any>;\n  private testModuleRef: NgModuleRef<any>|null = null;\n\n  constructor(private platform: PlatformRef, private additionalModuleTypes: Type<any>|Type<any>[]) {\n    class DynamicTestModule {}\n    this.testModuleType = DynamicTestModule as any;\n  }\n\n  setCompilerProviders(providers: Provider[]|null): void {\n    this.compilerProviders = providers;\n    this._injector = null;\n  }\n\n  configureTestingModule(moduleDef: TestModuleMetadata): void {\n    // Enqueue any compilation tasks for the directly declared component.\n    if (moduleDef.declarations !== undefined) {\n      this.queueTypeArray(moduleDef.declarations, TestingModuleOverride.DECLARATION);\n      this.declarations.push(...moduleDef.declarations);\n    }\n\n    // Enqueue any compilation tasks for imported modules.\n    if (moduleDef.imports !== undefined) {\n      this.queueTypesFromModulesArray(moduleDef.imports);\n      this.imports.push(...moduleDef.imports);\n    }\n\n    if (moduleDef.providers !== undefined) {\n      this.providers.push(...moduleDef.providers);\n    }\n\n    if (moduleDef.schemas !== undefined) {\n      this.schemas.push(...moduleDef.schemas);\n    }\n  }\n\n  overrideModule(ngModule: Type<any>, override: MetadataOverride<NgModule>): void {\n    this.overriddenModules.add(ngModule as NgModuleType<any>);\n\n    // Compile the module right away.\n    this.resolvers.module.addOverride(ngModule, override);\n    const metadata = this.resolvers.module.resolve(ngModule);\n    if (metadata === null) {\n      throw invalidTypeError(ngModule.name, 'NgModule');\n    }\n\n    this.recompileNgModule(ngModule, metadata);\n\n    // At this point, the module has a valid module def (ɵmod), but the override may have introduced\n    // new declarations or imported modules. Ingest any possible new types and add them to the\n    // current queue.\n    this.queueTypesFromModulesArray([ngModule]);\n  }\n\n  overrideComponent(component: Type<any>, override: MetadataOverride<Component>): void {\n    this.resolvers.component.addOverride(component, override);\n    this.pendingComponents.add(component);\n  }\n\n  overrideDirective(directive: Type<any>, override: MetadataOverride<Directive>): void {\n    this.resolvers.directive.addOverride(directive, override);\n    this.pendingDirectives.add(directive);\n  }\n\n  overridePipe(pipe: Type<any>, override: MetadataOverride<Pipe>): void {\n    this.resolvers.pipe.addOverride(pipe, override);\n    this.pendingPipes.add(pipe);\n  }\n\n  overrideProvider(\n      token: any,\n      provider: {useFactory?: Function, useValue?: any, deps?: any[], multi?: boolean}): void {\n    let providerDef: Provider;\n    if (provider.useFactory !== undefined) {\n      providerDef = {\n        provide: token,\n        useFactory: provider.useFactory,\n        deps: provider.deps || [],\n        multi: provider.multi\n      };\n    } else if (provider.useValue !== undefined) {\n      providerDef = {provide: token, useValue: provider.useValue, multi: provider.multi};\n    } else {\n      providerDef = {provide: token};\n    }\n\n    const injectableDef: InjectableDef<any>|null =\n        typeof token !== 'string' ? getInjectableDef(token) : null;\n    const isRoot = injectableDef !== null && injectableDef.providedIn === 'root';\n    const overridesBucket = isRoot ? this.rootProviderOverrides : this.providerOverrides;\n    overridesBucket.push(providerDef);\n\n    // Keep overrides grouped by token as well for fast lookups using token\n    this.providerOverridesByToken.set(token, providerDef);\n    if (injectableDef !== null && injectableDef.providedIn !== null &&\n        typeof injectableDef.providedIn !== 'string') {\n      const existingOverrides = this.providerOverridesByModule.get(injectableDef.providedIn);\n      if (existingOverrides !== undefined) {\n        existingOverrides.push(providerDef);\n      } else {\n        this.providerOverridesByModule.set(injectableDef.providedIn, [providerDef]);\n      }\n    }\n  }\n\n  overrideTemplateUsingTestingModule(type: Type<any>, template: string): void {\n    const def = (type as any)[NG_COMP_DEF];\n    const hasStyleUrls = (): boolean => {\n      const metadata = this.resolvers.component.resolve(type)! as Component;\n      return !!metadata.styleUrls && metadata.styleUrls.length > 0;\n    };\n    const overrideStyleUrls = !!def && !isComponentDefPendingResolution(type) && hasStyleUrls();\n\n    // In Ivy, compiling a component does not require knowing the module providing the\n    // component's scope, so overrideTemplateUsingTestingModule can be implemented purely via\n    // overrideComponent. Important: overriding template requires full Component re-compilation,\n    // which may fail in case styleUrls are also present (thus Component is considered as required\n    // resolution). In order to avoid this, we preemptively set styleUrls to an empty array,\n    // preserve current styles available on Component def and restore styles back once compilation\n    // is complete.\n    const override = overrideStyleUrls ? {template, styles: [], styleUrls: []} : {template};\n    this.overrideComponent(type, {set: override});\n\n    if (overrideStyleUrls && def.styles && def.styles.length > 0) {\n      this.existingComponentStyles.set(type, def.styles);\n    }\n\n    // Set the component's scope to be the testing module.\n    this.componentToModuleScope.set(type, TestingModuleOverride.OVERRIDE_TEMPLATE);\n  }\n\n  async compileComponents(): Promise<void> {\n    this.clearComponentResolutionQueue();\n    // Run compilers for all queued types.\n    let needsAsyncResources = this.compileTypesSync();\n\n    // compileComponents() should not be async unless it needs to be.\n    if (needsAsyncResources) {\n      let resourceLoader: ResourceLoader;\n      let resolver = (url: string): Promise<string> => {\n        if (!resourceLoader) {\n          resourceLoader = this.injector.get(ResourceLoader);\n        }\n        return Promise.resolve(resourceLoader.get(url));\n      };\n      await resolveComponentResources(resolver);\n    }\n  }\n\n  finalize(): NgModuleRef<any> {\n    // One last compile\n    this.compileTypesSync();\n\n    // Create the testing module itself.\n    this.compileTestModule();\n\n    this.applyTransitiveScopes();\n\n    this.applyProviderOverrides();\n\n    // Patch previously stored `styles` Component values (taken from ɵcmp), in case these\n    // Components have `styleUrls` fields defined and template override was requested.\n    this.patchComponentsWithExistingStyles();\n\n    // Clear the componentToModuleScope map, so that future compilations don't reset the scope of\n    // every component.\n    this.componentToModuleScope.clear();\n\n    const parentInjector = this.platform.injector;\n    this.testModuleRef = new NgModuleRef(this.testModuleType, parentInjector);\n\n    // ApplicationInitStatus.runInitializers() is marked @internal to core.\n    // Cast it to any before accessing it.\n    (this.testModuleRef.injector.get(ApplicationInitStatus) as any).runInitializers();\n\n    // Set locale ID after running app initializers, since locale information might be updated while\n    // running initializers. This is also consistent with the execution order while bootstrapping an\n    // app (see `packages/core/src/application_ref.ts` file).\n    const localeId = this.testModuleRef.injector.get(LOCALE_ID, DEFAULT_LOCALE_ID);\n    setLocaleId(localeId);\n\n    return this.testModuleRef;\n  }\n\n  /**\n   * @internal\n   */\n  _compileNgModuleSync(moduleType: Type<any>): void {\n    this.queueTypesFromModulesArray([moduleType]);\n    this.compileTypesSync();\n    this.applyProviderOverrides();\n    this.applyProviderOverridesToModule(moduleType);\n    this.applyTransitiveScopes();\n  }\n\n  /**\n   * @internal\n   */\n  async _compileNgModuleAsync(moduleType: Type<any>): Promise<void> {\n    this.queueTypesFromModulesArray([moduleType]);\n    await this.compileComponents();\n    this.applyProviderOverrides();\n    this.applyProviderOverridesToModule(moduleType);\n    this.applyTransitiveScopes();\n  }\n\n  /**\n   * @internal\n   */\n  _getModuleResolver(): Resolver<NgModule> {\n    return this.resolvers.module;\n  }\n\n  /**\n   * @internal\n   */\n  _getComponentFactories(moduleType: NgModuleType): ComponentFactory<any>[] {\n    return maybeUnwrapFn(moduleType.ɵmod.declarations).reduce((factories, declaration) => {\n      const componentDef = (declaration as any).ɵcmp;\n      componentDef && factories.push(new ComponentFactory(componentDef, this.testModuleRef!));\n      return factories;\n    }, [] as ComponentFactory<any>[]);\n  }\n\n  private compileTypesSync(): boolean {\n    // Compile all queued components, directives, pipes.\n    let needsAsyncResources = false;\n    this.pendingComponents.forEach(declaration => {\n      needsAsyncResources = needsAsyncResources || isComponentDefPendingResolution(declaration);\n      const metadata = this.resolvers.component.resolve(declaration);\n      if (metadata === null) {\n        throw invalidTypeError(declaration.name, 'Component');\n      }\n      this.maybeStoreNgDef(NG_COMP_DEF, declaration);\n      compileComponent(declaration, metadata);\n    });\n    this.pendingComponents.clear();\n\n    this.pendingDirectives.forEach(declaration => {\n      const metadata = this.resolvers.directive.resolve(declaration);\n      if (metadata === null) {\n        throw invalidTypeError(declaration.name, 'Directive');\n      }\n      this.maybeStoreNgDef(NG_DIR_DEF, declaration);\n      compileDirective(declaration, metadata);\n    });\n    this.pendingDirectives.clear();\n\n    this.pendingPipes.forEach(declaration => {\n      const metadata = this.resolvers.pipe.resolve(declaration);\n      if (metadata === null) {\n        throw invalidTypeError(declaration.name, 'Pipe');\n      }\n      this.maybeStoreNgDef(NG_PIPE_DEF, declaration);\n      compilePipe(declaration, metadata);\n    });\n    this.pendingPipes.clear();\n\n    return needsAsyncResources;\n  }\n\n  private applyTransitiveScopes(): void {\n    if (this.overriddenModules.size > 0) {\n      // Module overrides (via `TestBed.overrideModule`) might affect scopes that were previously\n      // calculated and stored in `transitiveCompileScopes`. If module overrides are present,\n      // collect all affected modules and reset scopes to force their re-calculatation.\n      const testingModuleDef = (this.testModuleType as any)[NG_MOD_DEF];\n      const affectedModules = this.collectModulesAffectedByOverrides(testingModuleDef.imports);\n      if (affectedModules.size > 0) {\n        affectedModules.forEach(moduleType => {\n          this.storeFieldOfDefOnType(moduleType as any, NG_MOD_DEF, 'transitiveCompileScopes');\n          (moduleType as any)[NG_MOD_DEF].transitiveCompileScopes = null;\n        });\n      }\n    }\n\n    const moduleToScope = new Map<Type<any>|TestingModuleOverride, NgModuleTransitiveScopes>();\n    const getScopeOfModule =\n        (moduleType: Type<any>|TestingModuleOverride): NgModuleTransitiveScopes => {\n          if (!moduleToScope.has(moduleType)) {\n            const isTestingModule = isTestingModuleOverride(moduleType);\n            const realType = isTestingModule ? this.testModuleType : moduleType as Type<any>;\n            moduleToScope.set(moduleType, transitiveScopesFor(realType));\n          }\n          return moduleToScope.get(moduleType)!;\n        };\n\n    this.componentToModuleScope.forEach((moduleType, componentType) => {\n      const moduleScope = getScopeOfModule(moduleType);\n      this.storeFieldOfDefOnType(componentType, NG_COMP_DEF, 'directiveDefs');\n      this.storeFieldOfDefOnType(componentType, NG_COMP_DEF, 'pipeDefs');\n      patchComponentDefWithScope((componentType as any).ɵcmp, moduleScope);\n    });\n\n    this.componentToModuleScope.clear();\n  }\n\n  private applyProviderOverrides(): void {\n    const maybeApplyOverrides = (field: string) => (type: Type<any>) => {\n      const resolver = field === NG_COMP_DEF ? this.resolvers.component : this.resolvers.directive;\n      const metadata = resolver.resolve(type)!;\n      if (this.hasProviderOverrides(metadata.providers)) {\n        this.patchDefWithProviderOverrides(type, field);\n      }\n    };\n    this.seenComponents.forEach(maybeApplyOverrides(NG_COMP_DEF));\n    this.seenDirectives.forEach(maybeApplyOverrides(NG_DIR_DEF));\n\n    this.seenComponents.clear();\n    this.seenDirectives.clear();\n  }\n\n  private applyProviderOverridesToModule(moduleType: Type<any>): void {\n    if (this.moduleProvidersOverridden.has(moduleType)) {\n      return;\n    }\n    this.moduleProvidersOverridden.add(moduleType);\n\n    const injectorDef: any = (moduleType as any)[NG_INJ_DEF];\n    if (this.providerOverridesByToken.size > 0) {\n      const providers = [\n        ...injectorDef.providers,\n        ...(this.providerOverridesByModule.get(moduleType as InjectorType<any>) || [])\n      ];\n      if (this.hasProviderOverrides(providers)) {\n        this.maybeStoreNgDef(NG_INJ_DEF, moduleType);\n\n        this.storeFieldOfDefOnType(moduleType, NG_INJ_DEF, 'providers');\n        injectorDef.providers = this.getOverriddenProviders(providers);\n      }\n\n      // Apply provider overrides to imported modules recursively\n      const moduleDef = (moduleType as any)[NG_MOD_DEF];\n      const imports = maybeUnwrapFn(moduleDef.imports);\n      for (const importedModule of imports) {\n        this.applyProviderOverridesToModule(importedModule);\n      }\n      // Also override the providers on any ModuleWithProviders imports since those don't appear in\n      // the moduleDef.\n      for (const importedModule of flatten(injectorDef.imports)) {\n        if (isModuleWithProviders(importedModule)) {\n          this.defCleanupOps.push({\n            object: importedModule,\n            fieldName: 'providers',\n            originalValue: importedModule.providers\n          });\n          importedModule.providers = this.getOverriddenProviders(importedModule.providers);\n        }\n      }\n    }\n  }\n\n  private patchComponentsWithExistingStyles(): void {\n    this.existingComponentStyles.forEach(\n        (styles, type) => (type as any)[NG_COMP_DEF].styles = styles);\n    this.existingComponentStyles.clear();\n  }\n\n  private queueTypeArray(arr: any[], moduleType: Type<any>|TestingModuleOverride): void {\n    for (const value of arr) {\n      if (Array.isArray(value)) {\n        this.queueTypeArray(value, moduleType);\n      } else {\n        this.queueType(value, moduleType);\n      }\n    }\n  }\n\n  private recompileNgModule(ngModule: Type<any>, metadata: NgModule): void {\n    // Cache the initial ngModuleDef as it will be overwritten.\n    this.maybeStoreNgDef(NG_MOD_DEF, ngModule);\n    this.maybeStoreNgDef(NG_INJ_DEF, ngModule);\n\n    compileNgModuleDefs(ngModule as NgModuleType<any>, metadata);\n  }\n\n  private queueType(type: Type<any>, moduleType: Type<any>|TestingModuleOverride): void {\n    const component = this.resolvers.component.resolve(type);\n    if (component) {\n      // Check whether a give Type has respective NG def (ɵcmp) and compile if def is\n      // missing. That might happen in case a class without any Angular decorators extends another\n      // class where Component/Directive/Pipe decorator is defined.\n      if (isComponentDefPendingResolution(type) || !type.hasOwnProperty(NG_COMP_DEF)) {\n        this.pendingComponents.add(type);\n      }\n      this.seenComponents.add(type);\n\n      // Keep track of the module which declares this component, so later the component's scope\n      // can be set correctly. If the component has already been recorded here, then one of several\n      // cases is true:\n      // * the module containing the component was imported multiple times (common).\n      // * the component is declared in multiple modules (which is an error).\n      // * the component was in 'declarations' of the testing module, and also in an imported module\n      //   in which case the module scope will be TestingModuleOverride.DECLARATION.\n      // * overrideTemplateUsingTestingModule was called for the component in which case the module\n      //   scope will be TestingModuleOverride.OVERRIDE_TEMPLATE.\n      //\n      // If the component was previously in the testing module's 'declarations' (meaning the\n      // current value is TestingModuleOverride.DECLARATION), then `moduleType` is the component's\n      // real module, which was imported. This pattern is understood to mean that the component\n      // should use its original scope, but that the testing module should also contain the\n      // component in its scope.\n      if (!this.componentToModuleScope.has(type) ||\n          this.componentToModuleScope.get(type) === TestingModuleOverride.DECLARATION) {\n        this.componentToModuleScope.set(type, moduleType);\n      }\n      return;\n    }\n\n    const directive = this.resolvers.directive.resolve(type);\n    if (directive) {\n      if (!type.hasOwnProperty(NG_DIR_DEF)) {\n        this.pendingDirectives.add(type);\n      }\n      this.seenDirectives.add(type);\n      return;\n    }\n\n    const pipe = this.resolvers.pipe.resolve(type);\n    if (pipe && !type.hasOwnProperty(NG_PIPE_DEF)) {\n      this.pendingPipes.add(type);\n      return;\n    }\n  }\n\n  private queueTypesFromModulesArray(arr: any[]): void {\n    // Because we may encounter the same NgModule while processing the imports and exports of an\n    // NgModule tree, we cache them in this set so we can skip ones that have already been seen\n    // encountered. In some test setups, this caching resulted in 10X runtime improvement.\n    const processedNgModuleDefs = new Set();\n    const queueTypesFromModulesArrayRecur = (arr: any[]): void => {\n      for (const value of arr) {\n        if (Array.isArray(value)) {\n          queueTypesFromModulesArrayRecur(value);\n        } else if (hasNgModuleDef(value)) {\n          const def = value.ɵmod;\n          if (processedNgModuleDefs.has(def)) {\n            continue;\n          }\n          processedNgModuleDefs.add(def);\n          // Look through declarations, imports, and exports, and queue\n          // everything found there.\n          this.queueTypeArray(maybeUnwrapFn(def.declarations), value);\n          queueTypesFromModulesArrayRecur(maybeUnwrapFn(def.imports));\n          queueTypesFromModulesArrayRecur(maybeUnwrapFn(def.exports));\n        }\n      }\n    };\n    queueTypesFromModulesArrayRecur(arr);\n  }\n\n  // When module overrides (via `TestBed.overrideModule`) are present, it might affect all modules\n  // that import (even transitively) an overridden one. For all affected modules we need to\n  // recalculate their scopes for a given test run and restore original scopes at the end. The goal\n  // of this function is to collect all affected modules in a set for further processing. Example:\n  // if we have the following module hierarchy: A -> B -> C (where `->` means `imports`) and module\n  // `C` is overridden, we consider `A` and `B` as affected, since their scopes might become\n  // invalidated with the override.\n  private collectModulesAffectedByOverrides(arr: any[]): Set<NgModuleType<any>> {\n    const seenModules = new Set<NgModuleType<any>>();\n    const affectedModules = new Set<NgModuleType<any>>();\n    const calcAffectedModulesRecur = (arr: any[], path: NgModuleType<any>[]): void => {\n      for (const value of arr) {\n        if (Array.isArray(value)) {\n          // If the value is an array, just flatten it (by invoking this function recursively),\n          // keeping \"path\" the same.\n          calcAffectedModulesRecur(value, path);\n        } else if (hasNgModuleDef(value)) {\n          if (seenModules.has(value)) {\n            // If we've seen this module before and it's included into \"affected modules\" list, mark\n            // the whole path that leads to that module as affected, but do not descend into its\n            // imports, since we already examined them before.\n            if (affectedModules.has(value)) {\n              path.forEach(item => affectedModules.add(item));\n            }\n            continue;\n          }\n          seenModules.add(value);\n          if (this.overriddenModules.has(value)) {\n            path.forEach(item => affectedModules.add(item));\n          }\n          // Examine module imports recursively to look for overridden modules.\n          const moduleDef = (value as any)[NG_MOD_DEF];\n          calcAffectedModulesRecur(maybeUnwrapFn(moduleDef.imports), path.concat(value));\n        }\n      }\n    };\n    calcAffectedModulesRecur(arr, []);\n    return affectedModules;\n  }\n\n  private maybeStoreNgDef(prop: string, type: Type<any>) {\n    if (!this.initialNgDefs.has(type)) {\n      const currentDef = Object.getOwnPropertyDescriptor(type, prop);\n      this.initialNgDefs.set(type, [prop, currentDef]);\n    }\n  }\n\n  private storeFieldOfDefOnType(type: Type<any>, defField: string, fieldName: string): void {\n    const def: any = (type as any)[defField];\n    const originalValue: any = def[fieldName];\n    this.defCleanupOps.push({object: def, fieldName, originalValue});\n  }\n\n  /**\n   * Clears current components resolution queue, but stores the state of the queue, so we can\n   * restore it later. Clearing the queue is required before we try to compile components (via\n   * `TestBed.compileComponents`), so that component defs are in sync with the resolution queue.\n   */\n  private clearComponentResolutionQueue() {\n    if (this.originalComponentResolutionQueue === null) {\n      this.originalComponentResolutionQueue = new Map();\n    }\n    clearResolutionOfComponentResourcesQueue().forEach(\n        (value, key) => this.originalComponentResolutionQueue!.set(key, value));\n  }\n\n  /*\n   * Restores component resolution queue to the previously saved state. This operation is performed\n   * as a part of restoring the state after completion of the current set of tests (that might\n   * potentially mutate the state).\n   */\n  private restoreComponentResolutionQueue() {\n    if (this.originalComponentResolutionQueue !== null) {\n      restoreComponentResolutionQueue(this.originalComponentResolutionQueue);\n      this.originalComponentResolutionQueue = null;\n    }\n  }\n\n  restoreOriginalState(): void {\n    // Process cleanup ops in reverse order so the field's original value is restored correctly (in\n    // case there were multiple overrides for the same field).\n    forEachRight(this.defCleanupOps, (op: CleanupOperation) => {\n      op.object[op.fieldName] = op.originalValue;\n    });\n    // Restore initial component/directive/pipe defs\n    this.initialNgDefs.forEach((value: [string, PropertyDescriptor|undefined], type: Type<any>) => {\n      const [prop, descriptor] = value;\n      if (!descriptor) {\n        // Delete operations are generally undesirable since they have performance implications\n        // on objects they were applied to. In this particular case, situations where this code\n        // is invoked should be quite rare to cause any noticeable impact, since it's applied\n        // only to some test cases (for example when class with no annotations extends some\n        // @Component) when we need to clear 'ɵcmp' field on a given class to restore\n        // its original state (before applying overrides and running tests).\n        delete (type as any)[prop];\n      } else {\n        Object.defineProperty(type, prop, descriptor);\n      }\n    });\n    this.initialNgDefs.clear();\n    this.moduleProvidersOverridden.clear();\n    this.restoreComponentResolutionQueue();\n    // Restore the locale ID to the default value, this shouldn't be necessary but we never know\n    setLocaleId(DEFAULT_LOCALE_ID);\n  }\n\n  private compileTestModule(): void {\n    class RootScopeModule {}\n    compileNgModuleDefs(RootScopeModule as NgModuleType<any>, {\n      providers: [...this.rootProviderOverrides],\n    });\n\n    const ngZone = new NgZone({enableLongStackTrace: true});\n    const providers: Provider[] = [\n      {provide: NgZone, useValue: ngZone},\n      {provide: Compiler, useFactory: () => new R3TestCompiler(this)},\n      ...this.providers,\n      ...this.providerOverrides,\n    ];\n    const imports = [RootScopeModule, this.additionalModuleTypes, this.imports || []];\n\n    // clang-format off\n    compileNgModuleDefs(this.testModuleType, {\n      declarations: this.declarations,\n      imports,\n      schemas: this.schemas,\n      providers,\n    }, /* allowDuplicateDeclarationsInRoot */ true);\n    // clang-format on\n\n    this.applyProviderOverridesToModule(this.testModuleType);\n  }\n\n  get injector(): Injector {\n    if (this._injector !== null) {\n      return this._injector;\n    }\n\n    const providers: Provider[] = [];\n    const compilerOptions = this.platform.injector.get(COMPILER_OPTIONS);\n    compilerOptions.forEach(opts => {\n      if (opts.providers) {\n        providers.push(opts.providers);\n      }\n    });\n    if (this.compilerProviders !== null) {\n      providers.push(...this.compilerProviders);\n    }\n\n    // TODO(ocombe): make this work with an Injector directly instead of creating a module for it\n    class CompilerModule {}\n    compileNgModuleDefs(CompilerModule as NgModuleType<any>, {providers});\n\n    const CompilerModuleFactory = new R3NgModuleFactory(CompilerModule);\n    this._injector = CompilerModuleFactory.create(this.platform.injector).injector;\n    return this._injector;\n  }\n\n  // get overrides for a specific provider (if any)\n  private getSingleProviderOverrides(provider: Provider): Provider|null {\n    const token = getProviderToken(provider);\n    return this.providerOverridesByToken.get(token) || null;\n  }\n\n  private getProviderOverrides(providers?: Provider[]): Provider[] {\n    if (!providers || !providers.length || this.providerOverridesByToken.size === 0) return [];\n    // There are two flattening operations here. The inner flatten() operates on the metadata's\n    // providers and applies a mapping function which retrieves overrides for each incoming\n    // provider. The outer flatten() then flattens the produced overrides array. If this is not\n    // done, the array can contain other empty arrays (e.g. `[[], []]`) which leak into the\n    // providers array and contaminate any error messages that might be generated.\n    return flatten(flatten(\n        providers, (provider: Provider) => this.getSingleProviderOverrides(provider) || []));\n  }\n\n  private getOverriddenProviders(providers?: Provider[]): Provider[] {\n    if (!providers || !providers.length || this.providerOverridesByToken.size === 0) return [];\n\n    const flattenedProviders = flatten<Provider[]>(providers);\n    const overrides = this.getProviderOverrides(flattenedProviders);\n    const overriddenProviders = [...flattenedProviders, ...overrides];\n    const final: Provider[] = [];\n    const seenOverriddenProviders = new Set<Provider>();\n\n    // We iterate through the list of providers in reverse order to make sure provider overrides\n    // take precedence over the values defined in provider list. We also filter out all providers\n    // that have overrides, keeping overridden values only. This is needed, since presence of a\n    // provider with `ngOnDestroy` hook will cause this hook to be registered and invoked later.\n    forEachRight(overriddenProviders, (provider: any) => {\n      const token: any = getProviderToken(provider);\n      if (this.providerOverridesByToken.has(token)) {\n        if (!seenOverriddenProviders.has(token)) {\n          seenOverriddenProviders.add(token);\n          // Treat all overridden providers as `{multi: false}` (even if it's a multi-provider) to\n          // make sure that provided override takes highest precedence and is not combined with\n          // other instances of the same multi provider.\n          final.unshift({...provider, multi: false});\n        }\n      } else {\n        final.unshift(provider);\n      }\n    });\n    return final;\n  }\n\n  private hasProviderOverrides(providers?: Provider[]): boolean {\n    return this.getProviderOverrides(providers).length > 0;\n  }\n\n  private patchDefWithProviderOverrides(declaration: Type<any>, field: string): void {\n    const def = (declaration as any)[field];\n    if (def && def.providersResolver) {\n      this.maybeStoreNgDef(field, declaration);\n\n      const resolver = def.providersResolver;\n      const processProvidersFn = (providers: Provider[]) => this.getOverriddenProviders(providers);\n      this.storeFieldOfDefOnType(declaration, field, 'providersResolver');\n      def.providersResolver = (ngDef: DirectiveDef<any>) => resolver(ngDef, processProvidersFn);\n    }\n  }\n}\n\nfunction initResolvers(): Resolvers {\n  return {\n    module: new NgModuleResolver(),\n    component: new ComponentResolver(),\n    directive: new DirectiveResolver(),\n    pipe: new PipeResolver()\n  };\n}\n\nfunction hasNgModuleDef<T>(value: Type<T>): value is NgModuleType<T> {\n  return value.hasOwnProperty('ɵmod');\n}\n\nfunction maybeUnwrapFn<T>(maybeFn: (() => T)|T): T {\n  return maybeFn instanceof Function ? maybeFn() : maybeFn;\n}\n\nfunction flatten<T>(values: any[], mapFn?: (value: T) => any): T[] {\n  const out: T[] = [];\n  values.forEach(value => {\n    if (Array.isArray(value)) {\n      out.push(...flatten<T>(value, mapFn));\n    } else {\n      out.push(mapFn ? mapFn(value) : value);\n    }\n  });\n  return out;\n}\n\nfunction getProviderField(provider: Provider, field: string) {\n  return provider && typeof provider === 'object' && (provider as any)[field];\n}\n\nfunction getProviderToken(provider: Provider) {\n  return getProviderField(provider, 'provide') || provider;\n}\n\nfunction isModuleWithProviders(value: any): value is ModuleWithProviders<any> {\n  return value.hasOwnProperty('ngModule');\n}\n\nfunction forEachRight<T>(values: T[], fn: (value: T, idx: number) => void): void {\n  for (let idx = values.length - 1; idx >= 0; idx--) {\n    fn(values[idx], idx);\n  }\n}\n\nfunction invalidTypeError(name: string, expectedType: string): Error {\n  return new Error(`${name} class doesn't have @${expectedType} decorator or is missing metadata.`);\n}\n\nclass R3TestCompiler implements Compiler {\n  constructor(private testBed: R3TestBedCompiler) {}\n\n  compileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T> {\n    this.testBed._compileNgModuleSync(moduleType);\n    return new R3NgModuleFactory(moduleType);\n  }\n\n  async compileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> {\n    await this.testBed._compileNgModuleAsync(moduleType);\n    return new R3NgModuleFactory(moduleType);\n  }\n\n  compileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T> {\n    const ngModuleFactory = this.compileModuleSync(moduleType);\n    const componentFactories = this.testBed._getComponentFactories(moduleType as NgModuleType<T>);\n    return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n  }\n\n  async compileModuleAndAllComponentsAsync<T>(moduleType: Type<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    const ngModuleFactory = await this.compileModuleAsync(moduleType);\n    const componentFactories = this.testBed._getComponentFactories(moduleType as NgModuleType<T>);\n    return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n  }\n\n  clearCache(): void {}\n\n  clearCacheFor(type: Type<any>): void {}\n\n  getModuleId(moduleType: Type<any>): string|undefined {\n    const meta = this.testBed._getModuleResolver().resolve(moduleType);\n    return meta && meta.id || undefined;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AbstractType, Component, Directive, InjectFlags, InjectionToken, NgModule, Pipe, PlatformRef, SchemaMetadata, Type} from '@angular/core';\n\nimport {ComponentFixture} from './component_fixture';\nimport {MetadataOverride} from './metadata_override';\nimport {TestBed} from './test_bed';\n\n/**\n * An abstract class for inserting the root test component element in a platform independent way.\n *\n * @publicApi\n */\nexport class TestComponentRenderer {\n  insertRootElement(rootElementId: string) {}\n}\n\n/**\n * @publicApi\n */\nexport const ComponentFixtureAutoDetect =\n    new InjectionToken<boolean[]>('ComponentFixtureAutoDetect');\n\n/**\n * @publicApi\n */\nexport const ComponentFixtureNoNgZone = new InjectionToken<boolean[]>('ComponentFixtureNoNgZone');\n\n/**\n * @publicApi\n */\nexport type TestModuleMetadata = {\n  providers?: any[],\n  declarations?: any[],\n  imports?: any[],\n  schemas?: Array<SchemaMetadata|any[]>,\n  aotSummaries?: () => any[],\n};\n\n/**\n * Static methods implemented by the `TestBedViewEngine` and `TestBedRender3`\n *\n * @publicApi\n */\nexport interface TestBedStatic {\n  new(...args: any[]): TestBed;\n\n  initTestEnvironment(\n      ngModule: Type<any>|Type<any>[], platform: PlatformRef, aotSummaries?: () => any[]): TestBed;\n\n  /**\n   * Reset the providers for the test injector.\n   */\n  resetTestEnvironment(): void;\n\n  resetTestingModule(): TestBedStatic;\n\n  /**\n   * Allows overriding default compiler providers and settings\n   * which are defined in test_injector.js\n   */\n  configureCompiler(config: {providers?: any[]; useJit?: boolean;}): TestBedStatic;\n\n  /**\n   * Allows overriding default providers, directives, pipes, modules of the test injector,\n   * which are defined in test_injector.js\n   */\n  configureTestingModule(moduleDef: TestModuleMetadata): TestBedStatic;\n\n  /**\n   * Compile components with a `templateUrl` for the test's NgModule.\n   * It is necessary to call this function\n   * as fetching urls is asynchronous.\n   */\n  compileComponents(): Promise<any>;\n\n  overrideModule(ngModule: Type<any>, override: MetadataOverride<NgModule>): TestBedStatic;\n\n  overrideComponent(component: Type<any>, override: MetadataOverride<Component>): TestBedStatic;\n\n  overrideDirective(directive: Type<any>, override: MetadataOverride<Directive>): TestBedStatic;\n\n  overridePipe(pipe: Type<any>, override: MetadataOverride<Pipe>): TestBedStatic;\n\n  overrideTemplate(component: Type<any>, template: string): TestBedStatic;\n\n  /**\n   * Overrides the template of the given component, compiling the template\n   * in the context of the TestingModule.\n   *\n   * Note: This works for JIT and AOTed components as well.\n   */\n  overrideTemplateUsingTestingModule(component: Type<any>, template: string): TestBedStatic;\n\n  /**\n   * Overwrites all providers for the given token with the given provider definition.\n   *\n   * Note: This works for JIT and AOTed components as well.\n   */\n  overrideProvider(token: any, provider: {\n    useFactory: Function,\n    deps: any[],\n  }): TestBedStatic;\n  overrideProvider(token: any, provider: {useValue: any;}): TestBedStatic;\n  overrideProvider(token: any, provider: {\n    useFactory?: Function,\n    useValue?: any,\n    deps?: any[],\n  }): TestBedStatic;\n\n  inject<T>(\n      token: Type<T>|InjectionToken<T>|AbstractType<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  inject<T>(\n      token: Type<T>|InjectionToken<T>|AbstractType<T>, notFoundValue: null, flags?: InjectFlags): T\n      |null;\n\n  /** @deprecated from v9.0.0 use TestBed.inject */\n  get<T>(token: Type<T>|InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): any;\n  /** @deprecated from v9.0.0 use TestBed.inject */\n  get(token: any, notFoundValue?: any): any;\n\n  createComponent<T>(component: Type<T>): ComponentFixture<T>;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// The formatter and CI disagree on how this import statement should be formatted. Both try to keep\n// it on one line, too, which has gotten very hard to read & manage. So disable the formatter for\n// this statement only.\n\n/* clang-format off */\nimport {\n  AbstractType,\n  Component,\n  Directive,\n  InjectFlags,\n  InjectionToken,\n  Injector,\n  NgModule,\n  NgZone,\n  Pipe,\n  PlatformRef,\n  Type,\n  ɵflushModuleScopingQueueAsMuchAsPossible as flushModuleScopingQueueAsMuchAsPossible,\n  ɵRender3ComponentFactory as ComponentFactory,\n  ɵRender3NgModuleRef as NgModuleRef,\n  ɵresetCompiledComponents as resetCompiledComponents,\n  ɵstringify as stringify,\n} from '@angular/core';\n\n/* clang-format on */\n\nimport {ComponentFixture} from './component_fixture';\nimport {MetadataOverride} from './metadata_override';\nimport {R3TestBedCompiler} from './r3_test_bed_compiler';\nimport {TestBed} from './test_bed';\nimport {ComponentFixtureAutoDetect, ComponentFixtureNoNgZone, TestBedStatic, TestComponentRenderer, TestModuleMetadata} from './test_bed_common';\n\nlet _nextRootElementId = 0;\n\n\n\n/**\n * @description\n * Configures and initializes environment for unit testing and provides methods for\n * creating components and services in unit tests.\n *\n * TestBed is the primary api for writing unit tests for Angular applications and libraries.\n *\n * Note: Use `TestBed` in tests. It will be set to either `TestBedViewEngine` or `TestBedRender3`\n * according to the compiler used.\n */\nexport class TestBedRender3 implements TestBed {\n  /**\n   * Initialize the environment for testing with a compiler factory, a PlatformRef, and an\n   * angular module. These are common to every test in the suite.\n   *\n   * This may only be called once, to set up the common providers for the current test\n   * suite on the current platform. If you absolutely need to change the providers,\n   * first use `resetTestEnvironment`.\n   *\n   * Test modules and platforms for individual platforms are available from\n   * '@angular/<platform_name>/testing'.\n   *\n   * @publicApi\n   */\n  static initTestEnvironment(\n      ngModule: Type<any>|Type<any>[], platform: PlatformRef, aotSummaries?: () => any[]): TestBed {\n    const testBed = _getTestBedRender3();\n    testBed.initTestEnvironment(ngModule, platform, aotSummaries);\n    return testBed;\n  }\n\n  /**\n   * Reset the providers for the test injector.\n   *\n   * @publicApi\n   */\n  static resetTestEnvironment(): void {\n    _getTestBedRender3().resetTestEnvironment();\n  }\n\n  static configureCompiler(config: {providers?: any[]; useJit?: boolean;}): TestBedStatic {\n    _getTestBedRender3().configureCompiler(config);\n    return TestBedRender3 as any as TestBedStatic;\n  }\n\n  /**\n   * Allows overriding default providers, directives, pipes, modules of the test injector,\n   * which are defined in test_injector.js\n   */\n  static configureTestingModule(moduleDef: TestModuleMetadata): TestBedStatic {\n    _getTestBedRender3().configureTestingModule(moduleDef);\n    return TestBedRender3 as any as TestBedStatic;\n  }\n\n  /**\n   * Compile components with a `templateUrl` for the test's NgModule.\n   * It is necessary to call this function\n   * as fetching urls is asynchronous.\n   */\n  static compileComponents(): Promise<any> {\n    return _getTestBedRender3().compileComponents();\n  }\n\n  static overrideModule(ngModule: Type<any>, override: MetadataOverride<NgModule>): TestBedStatic {\n    _getTestBedRender3().overrideModule(ngModule, override);\n    return TestBedRender3 as any as TestBedStatic;\n  }\n\n  static overrideComponent(component: Type<any>, override: MetadataOverride<Component>):\n      TestBedStatic {\n    _getTestBedRender3().overrideComponent(component, override);\n    return TestBedRender3 as any as TestBedStatic;\n  }\n\n  static overrideDirective(directive: Type<any>, override: MetadataOverride<Directive>):\n      TestBedStatic {\n    _getTestBedRender3().overrideDirective(directive, override);\n    return TestBedRender3 as any as TestBedStatic;\n  }\n\n  static overridePipe(pipe: Type<any>, override: MetadataOverride<Pipe>): TestBedStatic {\n    _getTestBedRender3().overridePipe(pipe, override);\n    return TestBedRender3 as any as TestBedStatic;\n  }\n\n  static overrideTemplate(component: Type<any>, template: string): TestBedStatic {\n    _getTestBedRender3().overrideComponent(component, {set: {template, templateUrl: null!}});\n    return TestBedRender3 as any as TestBedStatic;\n  }\n\n  /**\n   * Overrides the template of the given component, compiling the template\n   * in the context of the TestingModule.\n   *\n   * Note: This works for JIT and AOTed components as well.\n   */\n  static overrideTemplateUsingTestingModule(component: Type<any>, template: string): TestBedStatic {\n    _getTestBedRender3().overrideTemplateUsingTestingModule(component, template);\n    return TestBedRender3 as any as TestBedStatic;\n  }\n\n  static overrideProvider(token: any, provider: {\n    useFactory: Function,\n    deps: any[],\n  }): TestBedStatic;\n  static overrideProvider(token: any, provider: {useValue: any;}): TestBedStatic;\n  static overrideProvider(token: any, provider: {\n    useFactory?: Function,\n    useValue?: any,\n    deps?: any[],\n  }): TestBedStatic {\n    _getTestBedRender3().overrideProvider(token, provider);\n    return TestBedRender3 as any as TestBedStatic;\n  }\n\n  static inject<T>(\n      token: Type<T>|InjectionToken<T>|AbstractType<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  static inject<T>(\n      token: Type<T>|InjectionToken<T>|AbstractType<T>, notFoundValue: null, flags?: InjectFlags): T\n      |null;\n  static inject<T>(\n      token: Type<T>|InjectionToken<T>|AbstractType<T>, notFoundValue?: T|null,\n      flags?: InjectFlags): T|null {\n    return _getTestBedRender3().inject(token, notFoundValue, flags);\n  }\n\n  /** @deprecated from v9.0.0 use TestBed.inject */\n  static get<T>(token: Type<T>|InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): any;\n  /** @deprecated from v9.0.0 use TestBed.inject */\n  static get(token: any, notFoundValue?: any): any;\n  /** @deprecated from v9.0.0 use TestBed.inject */\n  static get(\n      token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND,\n      flags: InjectFlags = InjectFlags.Default): any {\n    return _getTestBedRender3().inject(token, notFoundValue, flags);\n  }\n\n  static createComponent<T>(component: Type<T>): ComponentFixture<T> {\n    return _getTestBedRender3().createComponent(component);\n  }\n\n  static resetTestingModule(): TestBedStatic {\n    _getTestBedRender3().resetTestingModule();\n    return TestBedRender3 as any as TestBedStatic;\n  }\n\n  // Properties\n\n  platform: PlatformRef = null!;\n  ngModule: Type<any>|Type<any>[] = null!;\n\n  private _compiler: R3TestBedCompiler|null = null;\n  private _testModuleRef: NgModuleRef<any>|null = null;\n\n  private _activeFixtures: ComponentFixture<any>[] = [];\n  private _globalCompilationChecked = false;\n\n  /**\n   * Initialize the environment for testing with a compiler factory, a PlatformRef, and an\n   * angular module. These are common to every test in the suite.\n   *\n   * This may only be called once, to set up the common providers for the current test\n   * suite on the current platform. If you absolutely need to change the providers,\n   * first use `resetTestEnvironment`.\n   *\n   * Test modules and platforms for individual platforms are available from\n   * '@angular/<platform_name>/testing'.\n   *\n   * @publicApi\n   */\n  initTestEnvironment(\n      ngModule: Type<any>|Type<any>[], platform: PlatformRef, aotSummaries?: () => any[]): void {\n    if (this.platform || this.ngModule) {\n      throw new Error('Cannot set base providers because it has already been called');\n    }\n    this.platform = platform;\n    this.ngModule = ngModule;\n    this._compiler = new R3TestBedCompiler(this.platform, this.ngModule);\n  }\n\n  /**\n   * Reset the providers for the test injector.\n   *\n   * @publicApi\n   */\n  resetTestEnvironment(): void {\n    this.resetTestingModule();\n    this._compiler = null;\n    this.platform = null!;\n    this.ngModule = null!;\n  }\n\n  resetTestingModule(): void {\n    this.checkGlobalCompilationFinished();\n    resetCompiledComponents();\n    if (this._compiler !== null) {\n      this.compiler.restoreOriginalState();\n    }\n    this._compiler = new R3TestBedCompiler(this.platform, this.ngModule);\n    this._testModuleRef = null;\n    this.destroyActiveFixtures();\n  }\n\n  configureCompiler(config: {providers?: any[]; useJit?: boolean;}): void {\n    if (config.useJit != null) {\n      throw new Error('the Render3 compiler JiT mode is not configurable !');\n    }\n\n    if (config.providers !== undefined) {\n      this.compiler.setCompilerProviders(config.providers);\n    }\n  }\n\n  configureTestingModule(moduleDef: TestModuleMetadata): void {\n    this.assertNotInstantiated('R3TestBed.configureTestingModule', 'configure the test module');\n    this.compiler.configureTestingModule(moduleDef);\n  }\n\n  compileComponents(): Promise<any> {\n    return this.compiler.compileComponents();\n  }\n\n  inject<T>(\n      token: Type<T>|InjectionToken<T>|AbstractType<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  inject<T>(\n      token: Type<T>|InjectionToken<T>|AbstractType<T>, notFoundValue: null, flags?: InjectFlags): T\n      |null;\n  inject<T>(\n      token: Type<T>|InjectionToken<T>|AbstractType<T>, notFoundValue?: T|null,\n      flags?: InjectFlags): T|null {\n    if (token as unknown === TestBedRender3) {\n      return this as any;\n    }\n    const UNDEFINED = {};\n    const result = this.testModuleRef.injector.get(token, UNDEFINED, flags);\n    return result === UNDEFINED ? this.compiler.injector.get(token, notFoundValue, flags) as any :\n                                  result;\n  }\n\n  /** @deprecated from v9.0.0 use TestBed.inject */\n  get<T>(token: Type<T>|InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): any;\n  /** @deprecated from v9.0.0 use TestBed.inject */\n  get(token: any, notFoundValue?: any): any;\n  /** @deprecated from v9.0.0 use TestBed.inject */\n  get(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND,\n      flags: InjectFlags = InjectFlags.Default): any {\n    return this.inject(token, notFoundValue, flags);\n  }\n\n  execute(tokens: any[], fn: Function, context?: any): any {\n    const params = tokens.map(t => this.inject(t));\n    return fn.apply(context, params);\n  }\n\n  overrideModule(ngModule: Type<any>, override: MetadataOverride<NgModule>): void {\n    this.assertNotInstantiated('overrideModule', 'override module metadata');\n    this.compiler.overrideModule(ngModule, override);\n  }\n\n  overrideComponent(component: Type<any>, override: MetadataOverride<Component>): void {\n    this.assertNotInstantiated('overrideComponent', 'override component metadata');\n    this.compiler.overrideComponent(component, override);\n  }\n\n  overrideTemplateUsingTestingModule(component: Type<any>, template: string): void {\n    this.assertNotInstantiated(\n        'R3TestBed.overrideTemplateUsingTestingModule',\n        'Cannot override template when the test module has already been instantiated');\n    this.compiler.overrideTemplateUsingTestingModule(component, template);\n  }\n\n  overrideDirective(directive: Type<any>, override: MetadataOverride<Directive>): void {\n    this.assertNotInstantiated('overrideDirective', 'override directive metadata');\n    this.compiler.overrideDirective(directive, override);\n  }\n\n  overridePipe(pipe: Type<any>, override: MetadataOverride<Pipe>): void {\n    this.assertNotInstantiated('overridePipe', 'override pipe metadata');\n    this.compiler.overridePipe(pipe, override);\n  }\n\n  /**\n   * Overwrites all providers for the given token with the given provider definition.\n   */\n  overrideProvider(token: any, provider: {useFactory?: Function, useValue?: any, deps?: any[]}):\n      void {\n    this.compiler.overrideProvider(token, provider);\n  }\n\n  createComponent<T>(type: Type<T>): ComponentFixture<T> {\n    const testComponentRenderer = this.inject(TestComponentRenderer);\n    const rootElId = `root-ng-internal-isolated-${_nextRootElementId++}`;\n    testComponentRenderer.insertRootElement(rootElId);\n\n    const componentDef = (type as any).ɵcmp;\n\n    if (!componentDef) {\n      throw new Error(\n          `It looks like '${stringify(type)}' has not been IVY compiled - it has no 'ɵcmp' field`);\n    }\n\n    // TODO: Don't cast as `InjectionToken<boolean>`, proper type is boolean[]\n    const noNgZone = this.inject(ComponentFixtureNoNgZone as InjectionToken<boolean>, false);\n    // TODO: Don't cast as `InjectionToken<boolean>`, proper type is boolean[]\n    const autoDetect: boolean =\n        this.inject(ComponentFixtureAutoDetect as InjectionToken<boolean>, false);\n    const ngZone: NgZone|null = noNgZone ? null : this.inject(NgZone, null);\n    const componentFactory = new ComponentFactory(componentDef);\n    const initComponent = () => {\n      const componentRef =\n          componentFactory.create(Injector.NULL, [], `#${rootElId}`, this.testModuleRef);\n      return new ComponentFixture<any>(componentRef, ngZone, autoDetect);\n    };\n    const fixture = ngZone ? ngZone.run(initComponent) : initComponent();\n    this._activeFixtures.push(fixture);\n    return fixture;\n  }\n\n  /**\n   * @internal strip this from published d.ts files due to\n   * https://github.com/microsoft/TypeScript/issues/36216\n   */\n  private get compiler(): R3TestBedCompiler {\n    if (this._compiler === null) {\n      throw new Error(`Need to call TestBed.initTestEnvironment() first`);\n    }\n    return this._compiler;\n  }\n\n  /**\n   * @internal strip this from published d.ts files due to\n   * https://github.com/microsoft/TypeScript/issues/36216\n   */\n  private get testModuleRef(): NgModuleRef<any> {\n    if (this._testModuleRef === null) {\n      this._testModuleRef = this.compiler.finalize();\n    }\n    return this._testModuleRef;\n  }\n\n  private assertNotInstantiated(methodName: string, methodDescription: string) {\n    if (this._testModuleRef !== null) {\n      throw new Error(\n          `Cannot ${methodDescription} when the test module has already been instantiated. ` +\n          `Make sure you are not using \\`inject\\` before \\`${methodName}\\`.`);\n    }\n  }\n\n  /**\n   * Check whether the module scoping queue should be flushed, and flush it if needed.\n   *\n   * When the TestBed is reset, it clears the JIT module compilation queue, cancelling any\n   * in-progress module compilation. This creates a potential hazard - the very first time the\n   * TestBed is initialized (or if it's reset without being initialized), there may be pending\n   * compilations of modules declared in global scope. These compilations should be finished.\n   *\n   * To ensure that globally declared modules have their components scoped properly, this function\n   * is called whenever TestBed is initialized or reset. The _first_ time that this happens, prior\n   * to any other operations, the scoping queue is flushed.\n   */\n  private checkGlobalCompilationFinished(): void {\n    // Checking _testNgModuleRef is null should not be necessary, but is left in as an additional\n    // guard that compilations queued in tests (after instantiation) are never flushed accidentally.\n    if (!this._globalCompilationChecked && this._testModuleRef === null) {\n      flushModuleScopingQueueAsMuchAsPossible();\n    }\n    this._globalCompilationChecked = true;\n  }\n\n  private destroyActiveFixtures(): void {\n    this._activeFixtures.forEach((fixture) => {\n      try {\n        fixture.destroy();\n      } catch (e) {\n        console.error('Error during cleanup of component', {\n          component: fixture.componentInstance,\n          stacktrace: e,\n        });\n      }\n    });\n    this._activeFixtures = [];\n  }\n}\n\nlet testBed: TestBedRender3;\n\nexport function _getTestBedRender3(): TestBedRender3 {\n  return testBed = testBed || new TestBedRender3();\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Compiler, CompilerOptions, Component, ComponentFactory, Directive, Injectable, Injector, NgModule, Pipe, Type} from '@angular/core';\n\nimport {MetadataOverride} from './metadata_override';\n\nfunction unimplemented(): any {\n  throw Error('unimplemented');\n}\n\n/**\n * Special interface to the compiler only used by testing\n *\n * @publicApi\n */\n@Injectable()\nexport class TestingCompiler extends Compiler {\n  get injector(): Injector {\n    throw unimplemented();\n  }\n  overrideModule(module: Type<any>, overrides: MetadataOverride<NgModule>): void {\n    throw unimplemented();\n  }\n  overrideDirective(directive: Type<any>, overrides: MetadataOverride<Directive>): void {\n    throw unimplemented();\n  }\n  overrideComponent(component: Type<any>, overrides: MetadataOverride<Component>): void {\n    throw unimplemented();\n  }\n  overridePipe(directive: Type<any>, overrides: MetadataOverride<Pipe>): void {\n    throw unimplemented();\n  }\n  /**\n   * Allows to pass the compile summary from AOT compilation to the JIT compiler,\n   * so that it can use the code generated by AOT.\n   */\n  loadAotSummaries(summaries: () => any[]) {\n    throw unimplemented();\n  }\n\n  /**\n   * Gets the component factory for the given component.\n   * This assumes that the component has been compiled before calling this call using\n   * `compileModuleAndAllComponents*`.\n   */\n  getComponentFactory<T>(component: Type<T>): ComponentFactory<T> {\n    throw unimplemented();\n  }\n\n  /**\n   * Returns the component type that is stored in the given error.\n   * This can be used for errors created by compileModule...\n   */\n  getComponentFromError(error: Error): Type<any>|null {\n    throw unimplemented();\n  }\n}\n\n/**\n * A factory for creating a Compiler\n *\n * @publicApi\n */\nexport abstract class TestingCompilerFactory {\n  abstract createTestingCompiler(options?: CompilerOptions[]): TestingCompiler;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AbstractType, ApplicationInitStatus, CompilerOptions, Component, Directive, InjectFlags, InjectionToken, Injector, NgModule, NgModuleFactory, NgModuleRef, NgZone, Optional, Pipe, PlatformRef, Provider, SchemaMetadata, SkipSelf, StaticProvider, Type, ɵclearOverrides as clearOverrides, ɵDepFlags as DepFlags, ɵgetInjectableDef as getInjectableDef, ɵINJECTOR_SCOPE as INJECTOR_SCOPE, ɵivyEnabled as ivyEnabled, ɵNodeFlags as NodeFlags, ɵoverrideComponentView as overrideComponentView, ɵoverrideProvider as overrideProvider, ɵstringify as stringify, ɵɵInjectableDef} from '@angular/core';\n\nimport {AsyncTestCompleter} from './async_test_completer';\nimport {ComponentFixture} from './component_fixture';\nimport {MetadataOverride} from './metadata_override';\nimport {_getTestBedRender3, TestBedRender3} from './r3_test_bed';\nimport {ComponentFixtureAutoDetect, ComponentFixtureNoNgZone, TestBedStatic, TestComponentRenderer, TestModuleMetadata} from './test_bed_common';\nimport {TestingCompiler, TestingCompilerFactory} from './test_compiler';\n\n\nlet _nextRootElementId = 0;\n\n/**\n * @publicApi\n */\nexport interface TestBed {\n  platform: PlatformRef;\n\n  ngModule: Type<any>|Type<any>[];\n\n  /**\n   * Initialize the environment for testing with a compiler factory, a PlatformRef, and an\n   * angular module. These are common to every test in the suite.\n   *\n   * This may only be called once, to set up the common providers for the current test\n   * suite on the current platform. If you absolutely need to change the providers,\n   * first use `resetTestEnvironment`.\n   *\n   * Test modules and platforms for individual platforms are available from\n   * '@angular/<platform_name>/testing'.\n   */\n  initTestEnvironment(\n      ngModule: Type<any>|Type<any>[], platform: PlatformRef, aotSummaries?: () => any[]): void;\n\n  /**\n   * Reset the providers for the test injector.\n   */\n  resetTestEnvironment(): void;\n\n  resetTestingModule(): void;\n\n  configureCompiler(config: {providers?: any[], useJit?: boolean}): void;\n\n  configureTestingModule(moduleDef: TestModuleMetadata): void;\n\n  compileComponents(): Promise<any>;\n\n  inject<T>(\n      token: Type<T>|InjectionToken<T>|AbstractType<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  inject<T>(\n      token: Type<T>|InjectionToken<T>|AbstractType<T>, notFoundValue: null, flags?: InjectFlags): T\n      |null;\n\n  /** @deprecated from v9.0.0 use TestBed.inject */\n  get<T>(token: Type<T>|InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): any;\n  /** @deprecated from v9.0.0 use TestBed.inject */\n  get(token: any, notFoundValue?: any): any;\n\n  execute(tokens: any[], fn: Function, context?: any): any;\n\n  overrideModule(ngModule: Type<any>, override: MetadataOverride<NgModule>): void;\n\n  overrideComponent(component: Type<any>, override: MetadataOverride<Component>): void;\n\n  overrideDirective(directive: Type<any>, override: MetadataOverride<Directive>): void;\n\n  overridePipe(pipe: Type<any>, override: MetadataOverride<Pipe>): void;\n\n  /**\n   * Overwrites all providers for the given token with the given provider definition.\n   */\n  overrideProvider(token: any, provider: {\n    useFactory: Function,\n    deps: any[],\n  }): void;\n  overrideProvider(token: any, provider: {useValue: any;}): void;\n  overrideProvider(token: any, provider: {useFactory?: Function, useValue?: any, deps?: any[]}):\n      void;\n\n  overrideTemplateUsingTestingModule(component: Type<any>, template: string): void;\n\n  createComponent<T>(component: Type<T>): ComponentFixture<T>;\n}\n\n/**\n * @description\n * Configures and initializes environment for unit testing and provides methods for\n * creating components and services in unit tests.\n *\n * `TestBed` is the primary api for writing unit tests for Angular applications and libraries.\n *\n * Note: Use `TestBed` in tests. It will be set to either `TestBedViewEngine` or `TestBedRender3`\n * according to the compiler used.\n */\nexport class TestBedViewEngine implements TestBed {\n  /**\n   * Initialize the environment for testing with a compiler factory, a PlatformRef, and an\n   * angular module. These are common to every test in the suite.\n   *\n   * This may only be called once, to set up the common providers for the current test\n   * suite on the current platform. If you absolutely need to change the providers,\n   * first use `resetTestEnvironment`.\n   *\n   * Test modules and platforms for individual platforms are available from\n   * '@angular/<platform_name>/testing'.\n   */\n  static initTestEnvironment(\n      ngModule: Type<any>|Type<any>[], platform: PlatformRef,\n      aotSummaries?: () => any[]): TestBedViewEngine {\n    const testBed = _getTestBedViewEngine();\n    testBed.initTestEnvironment(ngModule, platform, aotSummaries);\n    return testBed;\n  }\n\n  /**\n   * Reset the providers for the test injector.\n   */\n  static resetTestEnvironment(): void {\n    _getTestBedViewEngine().resetTestEnvironment();\n  }\n\n  static resetTestingModule(): TestBedStatic {\n    _getTestBedViewEngine().resetTestingModule();\n    return TestBedViewEngine as any as TestBedStatic;\n  }\n\n  /**\n   * Allows overriding default compiler providers and settings\n   * which are defined in test_injector.js\n   */\n  static configureCompiler(config: {providers?: any[]; useJit?: boolean;}): TestBedStatic {\n    _getTestBedViewEngine().configureCompiler(config);\n    return TestBedViewEngine as any as TestBedStatic;\n  }\n\n  /**\n   * Allows overriding default providers, directives, pipes, modules of the test injector,\n   * which are defined in test_injector.js\n   */\n  static configureTestingModule(moduleDef: TestModuleMetadata): TestBedStatic {\n    _getTestBedViewEngine().configureTestingModule(moduleDef);\n    return TestBedViewEngine as any as TestBedStatic;\n  }\n\n  /**\n   * Compile components with a `templateUrl` for the test's NgModule.\n   * It is necessary to call this function\n   * as fetching urls is asynchronous.\n   */\n  static compileComponents(): Promise<any> {\n    return getTestBed().compileComponents();\n  }\n\n  static overrideModule(ngModule: Type<any>, override: MetadataOverride<NgModule>): TestBedStatic {\n    _getTestBedViewEngine().overrideModule(ngModule, override);\n    return TestBedViewEngine as any as TestBedStatic;\n  }\n\n  static overrideComponent(component: Type<any>, override: MetadataOverride<Component>):\n      TestBedStatic {\n    _getTestBedViewEngine().overrideComponent(component, override);\n    return TestBedViewEngine as any as TestBedStatic;\n  }\n\n  static overrideDirective(directive: Type<any>, override: MetadataOverride<Directive>):\n      TestBedStatic {\n    _getTestBedViewEngine().overrideDirective(directive, override);\n    return TestBedViewEngine as any as TestBedStatic;\n  }\n\n  static overridePipe(pipe: Type<any>, override: MetadataOverride<Pipe>): TestBedStatic {\n    _getTestBedViewEngine().overridePipe(pipe, override);\n    return TestBedViewEngine as any as TestBedStatic;\n  }\n\n  static overrideTemplate(component: Type<any>, template: string): TestBedStatic {\n    _getTestBedViewEngine().overrideComponent(component, {set: {template, templateUrl: null!}});\n    return TestBedViewEngine as any as TestBedStatic;\n  }\n\n  /**\n   * Overrides the template of the given component, compiling the template\n   * in the context of the TestingModule.\n   *\n   * Note: This works for JIT and AOTed components as well.\n   */\n  static overrideTemplateUsingTestingModule(component: Type<any>, template: string): TestBedStatic {\n    _getTestBedViewEngine().overrideTemplateUsingTestingModule(component, template);\n    return TestBedViewEngine as any as TestBedStatic;\n  }\n\n  /**\n   * Overwrites all providers for the given token with the given provider definition.\n   *\n   * Note: This works for JIT and AOTed components as well.\n   */\n  static overrideProvider(token: any, provider: {\n    useFactory: Function,\n    deps: any[],\n  }): TestBedStatic;\n  static overrideProvider(token: any, provider: {useValue: any;}): TestBedStatic;\n  static overrideProvider(token: any, provider: {\n    useFactory?: Function,\n    useValue?: any,\n    deps?: any[],\n  }): TestBedStatic {\n    _getTestBedViewEngine().overrideProvider(token, provider as any);\n    return TestBedViewEngine as any as TestBedStatic;\n  }\n\n  static inject<T>(\n      token: Type<T>|InjectionToken<T>|AbstractType<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  static inject<T>(\n      token: Type<T>|InjectionToken<T>|AbstractType<T>, notFoundValue: null, flags?: InjectFlags): T\n      |null;\n  static inject<T>(\n      token: Type<T>|InjectionToken<T>|AbstractType<T>, notFoundValue?: T|null,\n      flags?: InjectFlags): T|null {\n    return _getTestBedViewEngine().inject(token, notFoundValue, flags);\n  }\n\n  /** @deprecated from v9.0.0 use TestBed.inject */\n  static get<T>(token: Type<T>|InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): any;\n  /**\n   * @deprecated from v9.0.0 use TestBed.inject\n   * @suppress {duplicate}\n   */\n  static get(token: any, notFoundValue?: any): any;\n  /** @deprecated from v9.0.0 use TestBed.inject */\n  static get(\n      token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND,\n      flags: InjectFlags = InjectFlags.Default): any {\n    return _getTestBedViewEngine().inject(token, notFoundValue, flags);\n  }\n\n  static createComponent<T>(component: Type<T>): ComponentFixture<T> {\n    return _getTestBedViewEngine().createComponent(component);\n  }\n\n  private _instantiated: boolean = false;\n\n  private _compiler: TestingCompiler = null!;\n  private _moduleRef: NgModuleRef<any> = null!;\n  private _moduleFactory: NgModuleFactory<any> = null!;\n\n  private _compilerOptions: CompilerOptions[] = [];\n\n  private _moduleOverrides: [Type<any>, MetadataOverride<NgModule>][] = [];\n  private _componentOverrides: [Type<any>, MetadataOverride<Component>][] = [];\n  private _directiveOverrides: [Type<any>, MetadataOverride<Directive>][] = [];\n  private _pipeOverrides: [Type<any>, MetadataOverride<Pipe>][] = [];\n\n  private _providers: Provider[] = [];\n  private _declarations: Array<Type<any>|any[]|any> = [];\n  private _imports: Array<Type<any>|any[]|any> = [];\n  private _schemas: Array<SchemaMetadata|any[]> = [];\n  private _activeFixtures: ComponentFixture<any>[] = [];\n\n  private _testEnvAotSummaries: () => any[] = () => [];\n  private _aotSummaries: Array<() => any[]> = [];\n  private _templateOverrides: Array<{component: Type<any>, templateOf: Type<any>}> = [];\n\n  private _isRoot: boolean = true;\n  private _rootProviderOverrides: Provider[] = [];\n\n  platform: PlatformRef = null!;\n\n  ngModule: Type<any>|Type<any>[] = null!;\n\n  /**\n   * Initialize the environment for testing with a compiler factory, a PlatformRef, and an\n   * angular module. These are common to every test in the suite.\n   *\n   * This may only be called once, to set up the common providers for the current test\n   * suite on the current platform. If you absolutely need to change the providers,\n   * first use `resetTestEnvironment`.\n   *\n   * Test modules and platforms for individual platforms are available from\n   * '@angular/<platform_name>/testing'.\n   */\n  initTestEnvironment(\n      ngModule: Type<any>|Type<any>[], platform: PlatformRef, aotSummaries?: () => any[]): void {\n    if (this.platform || this.ngModule) {\n      throw new Error('Cannot set base providers because it has already been called');\n    }\n    this.platform = platform;\n    this.ngModule = ngModule;\n    if (aotSummaries) {\n      this._testEnvAotSummaries = aotSummaries;\n    }\n  }\n\n  /**\n   * Reset the providers for the test injector.\n   */\n  resetTestEnvironment(): void {\n    this.resetTestingModule();\n    this.platform = null!;\n    this.ngModule = null!;\n    this._testEnvAotSummaries = () => [];\n  }\n\n  resetTestingModule(): void {\n    clearOverrides();\n    this._aotSummaries = [];\n    this._templateOverrides = [];\n    this._compiler = null!;\n    this._moduleOverrides = [];\n    this._componentOverrides = [];\n    this._directiveOverrides = [];\n    this._pipeOverrides = [];\n\n    this._isRoot = true;\n    this._rootProviderOverrides = [];\n\n    this._moduleRef = null!;\n    this._moduleFactory = null!;\n    this._compilerOptions = [];\n    this._providers = [];\n    this._declarations = [];\n    this._imports = [];\n    this._schemas = [];\n    this._instantiated = false;\n    this._activeFixtures.forEach((fixture) => {\n      try {\n        fixture.destroy();\n      } catch (e) {\n        console.error('Error during cleanup of component', {\n          component: fixture.componentInstance,\n          stacktrace: e,\n        });\n      }\n    });\n    this._activeFixtures = [];\n  }\n\n  configureCompiler(config: {providers?: any[], useJit?: boolean}): void {\n    this._assertNotInstantiated('TestBed.configureCompiler', 'configure the compiler');\n    this._compilerOptions.push(config);\n  }\n\n  configureTestingModule(moduleDef: TestModuleMetadata): void {\n    this._assertNotInstantiated('TestBed.configureTestingModule', 'configure the test module');\n    if (moduleDef.providers) {\n      this._providers.push(...moduleDef.providers);\n    }\n    if (moduleDef.declarations) {\n      this._declarations.push(...moduleDef.declarations);\n    }\n    if (moduleDef.imports) {\n      this._imports.push(...moduleDef.imports);\n    }\n    if (moduleDef.schemas) {\n      this._schemas.push(...moduleDef.schemas);\n    }\n    if (moduleDef.aotSummaries) {\n      this._aotSummaries.push(moduleDef.aotSummaries);\n    }\n  }\n\n  compileComponents(): Promise<any> {\n    if (this._moduleFactory || this._instantiated) {\n      return Promise.resolve(null);\n    }\n\n    const moduleType = this._createCompilerAndModule();\n    return this._compiler.compileModuleAndAllComponentsAsync(moduleType)\n        .then((moduleAndComponentFactories) => {\n          this._moduleFactory = moduleAndComponentFactories.ngModuleFactory;\n        });\n  }\n\n  private _initIfNeeded(): void {\n    if (this._instantiated) {\n      return;\n    }\n    if (!this._moduleFactory) {\n      try {\n        const moduleType = this._createCompilerAndModule();\n        this._moduleFactory =\n            this._compiler.compileModuleAndAllComponentsSync(moduleType).ngModuleFactory;\n      } catch (e) {\n        const errorCompType = this._compiler.getComponentFromError(e);\n        if (errorCompType) {\n          throw new Error(\n              `This test module uses the component ${\n                  stringify(\n                      errorCompType)} which is using a \"templateUrl\" or \"styleUrls\", but they were never compiled. ` +\n              `Please call \"TestBed.compileComponents\" before your test.`);\n        } else {\n          throw e;\n        }\n      }\n    }\n    for (const {component, templateOf} of this._templateOverrides) {\n      const compFactory = this._compiler.getComponentFactory(templateOf);\n      overrideComponentView(component, compFactory);\n    }\n\n    const ngZone =\n        new NgZone({enableLongStackTrace: true, shouldCoalesceEventChangeDetection: false});\n    const providers: StaticProvider[] = [{provide: NgZone, useValue: ngZone}];\n    const ngZoneInjector = Injector.create({\n      providers: providers,\n      parent: this.platform.injector,\n      name: this._moduleFactory.moduleType.name\n    });\n    this._moduleRef = this._moduleFactory.create(ngZoneInjector);\n    // ApplicationInitStatus.runInitializers() is marked @internal to core. So casting to any\n    // before accessing it.\n    (this._moduleRef.injector.get(ApplicationInitStatus) as any).runInitializers();\n    this._instantiated = true;\n  }\n\n  private _createCompilerAndModule(): Type<any> {\n    const providers = this._providers.concat([{provide: TestBed, useValue: this}]);\n    const declarations =\n        [...this._declarations, ...this._templateOverrides.map(entry => entry.templateOf)];\n\n    const rootScopeImports = [];\n    const rootProviderOverrides = this._rootProviderOverrides;\n    if (this._isRoot) {\n      @NgModule({\n        providers: [\n          ...rootProviderOverrides,\n        ],\n        jit: true,\n      })\n      class RootScopeModule {\n      }\n      rootScopeImports.push(RootScopeModule);\n    }\n    providers.push({provide: INJECTOR_SCOPE, useValue: this._isRoot ? 'root' : null});\n\n    const imports = [rootScopeImports, this.ngModule, this._imports];\n    const schemas = this._schemas;\n\n    @NgModule({providers, declarations, imports, schemas, jit: true})\n    class DynamicTestModule {\n    }\n\n    const compilerFactory = this.platform.injector.get(TestingCompilerFactory);\n    this._compiler = compilerFactory.createTestingCompiler(this._compilerOptions);\n    for (const summary of [this._testEnvAotSummaries, ...this._aotSummaries]) {\n      this._compiler.loadAotSummaries(summary);\n    }\n    this._moduleOverrides.forEach((entry) => this._compiler.overrideModule(entry[0], entry[1]));\n    this._componentOverrides.forEach(\n        (entry) => this._compiler.overrideComponent(entry[0], entry[1]));\n    this._directiveOverrides.forEach(\n        (entry) => this._compiler.overrideDirective(entry[0], entry[1]));\n    this._pipeOverrides.forEach((entry) => this._compiler.overridePipe(entry[0], entry[1]));\n    return DynamicTestModule;\n  }\n\n  private _assertNotInstantiated(methodName: string, methodDescription: string) {\n    if (this._instantiated) {\n      throw new Error(\n          `Cannot ${methodDescription} when the test module has already been instantiated. ` +\n          `Make sure you are not using \\`inject\\` before \\`${methodName}\\`.`);\n    }\n  }\n\n  inject<T>(\n      token: Type<T>|InjectionToken<T>|AbstractType<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  inject<T>(\n      token: Type<T>|InjectionToken<T>|AbstractType<T>, notFoundValue: null, flags?: InjectFlags): T\n      |null;\n  inject<T>(\n      token: Type<T>|InjectionToken<T>|AbstractType<T>, notFoundValue?: T|null,\n      flags?: InjectFlags): T|null {\n    this._initIfNeeded();\n    if (token as unknown === TestBed) {\n      return this as any;\n    }\n    // Tests can inject things from the ng module and from the compiler,\n    // but the ng module can't inject things from the compiler and vice versa.\n    const UNDEFINED = {};\n    const result = this._moduleRef.injector.get(token, UNDEFINED, flags);\n    return result === UNDEFINED ? this._compiler.injector.get(token, notFoundValue, flags) as any :\n                                  result;\n  }\n\n  /** @deprecated from v9.0.0 use TestBed.inject */\n  get<T>(token: Type<T>|InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): any;\n  /** @deprecated from v9.0.0 use TestBed.inject */\n  get(token: any, notFoundValue?: any): any;\n  /** @deprecated from v9.0.0 use TestBed.inject */\n  get(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND,\n      flags: InjectFlags = InjectFlags.Default): any {\n    return this.inject(token, notFoundValue, flags);\n  }\n\n  execute(tokens: any[], fn: Function, context?: any): any {\n    this._initIfNeeded();\n    const params = tokens.map(t => this.inject(t));\n    return fn.apply(context, params);\n  }\n\n  overrideModule(ngModule: Type<any>, override: MetadataOverride<NgModule>): void {\n    this._assertNotInstantiated('overrideModule', 'override module metadata');\n    this._moduleOverrides.push([ngModule, override]);\n  }\n\n  overrideComponent(component: Type<any>, override: MetadataOverride<Component>): void {\n    this._assertNotInstantiated('overrideComponent', 'override component metadata');\n    this._componentOverrides.push([component, override]);\n  }\n\n  overrideDirective(directive: Type<any>, override: MetadataOverride<Directive>): void {\n    this._assertNotInstantiated('overrideDirective', 'override directive metadata');\n    this._directiveOverrides.push([directive, override]);\n  }\n\n  overridePipe(pipe: Type<any>, override: MetadataOverride<Pipe>): void {\n    this._assertNotInstantiated('overridePipe', 'override pipe metadata');\n    this._pipeOverrides.push([pipe, override]);\n  }\n\n  /**\n   * Overwrites all providers for the given token with the given provider definition.\n   */\n  overrideProvider(token: any, provider: {\n    useFactory: Function,\n    deps: any[],\n  }): void;\n  overrideProvider(token: any, provider: {useValue: any;}): void;\n  overrideProvider(token: any, provider: {useFactory?: Function, useValue?: any, deps?: any[]}):\n      void {\n    this.overrideProviderImpl(token, provider);\n  }\n\n  private overrideProviderImpl(\n      token: any, provider: {\n        useFactory?: Function,\n        useValue?: any,\n        deps?: any[],\n      },\n      deprecated = false): void {\n    let def: ɵɵInjectableDef<any>|null = null;\n    if (typeof token !== 'string' && (def = getInjectableDef(token)) && def.providedIn === 'root') {\n      if (provider.useFactory) {\n        this._rootProviderOverrides.push(\n            {provide: token, useFactory: provider.useFactory, deps: provider.deps || []});\n      } else {\n        this._rootProviderOverrides.push({provide: token, useValue: provider.useValue});\n      }\n    }\n    let flags: NodeFlags = 0;\n    let value: any;\n    if (provider.useFactory) {\n      flags |= NodeFlags.TypeFactoryProvider;\n      value = provider.useFactory;\n    } else {\n      flags |= NodeFlags.TypeValueProvider;\n      value = provider.useValue;\n    }\n    const deps = (provider.deps || []).map((dep) => {\n      let depFlags: DepFlags = DepFlags.None;\n      let depToken: any;\n      if (Array.isArray(dep)) {\n        dep.forEach((entry: any) => {\n          if (entry instanceof Optional) {\n            depFlags |= DepFlags.Optional;\n          } else if (entry instanceof SkipSelf) {\n            depFlags |= DepFlags.SkipSelf;\n          } else {\n            depToken = entry;\n          }\n        });\n      } else {\n        depToken = dep;\n      }\n      return [depFlags, depToken];\n    });\n    overrideProvider({token, flags, deps, value, deprecatedBehavior: deprecated});\n  }\n\n  overrideTemplateUsingTestingModule(component: Type<any>, template: string) {\n    this._assertNotInstantiated('overrideTemplateUsingTestingModule', 'override template');\n\n    @Component({selector: 'empty', template, jit: true})\n    class OverrideComponent {\n    }\n\n    this._templateOverrides.push({component, templateOf: OverrideComponent});\n  }\n\n  createComponent<T>(component: Type<T>): ComponentFixture<T> {\n    this._initIfNeeded();\n    const componentFactory = this._compiler.getComponentFactory(component);\n\n    if (!componentFactory) {\n      throw new Error(`Cannot create the component ${\n          stringify(component)} as it was not imported into the testing module!`);\n    }\n\n    // TODO: Don't cast as `InjectionToken<boolean>`, declared type is boolean[]\n    const noNgZone = this.inject(ComponentFixtureNoNgZone as InjectionToken<boolean>, false);\n    // TODO: Don't cast as `InjectionToken<boolean>`, declared type is boolean[]\n    const autoDetect: boolean =\n        this.inject(ComponentFixtureAutoDetect as InjectionToken<boolean>, false);\n    const ngZone: NgZone|null = noNgZone ? null : this.inject(NgZone, null);\n    const testComponentRenderer: TestComponentRenderer = this.inject(TestComponentRenderer);\n    const rootElId = `root${_nextRootElementId++}`;\n    testComponentRenderer.insertRootElement(rootElId);\n\n    const initComponent = () => {\n      const componentRef =\n          componentFactory.create(Injector.NULL, [], `#${rootElId}`, this._moduleRef);\n      return new ComponentFixture<T>(componentRef, ngZone, autoDetect);\n    };\n\n    const fixture = !ngZone ? initComponent() : ngZone.run(initComponent);\n    this._activeFixtures.push(fixture);\n    return fixture;\n  }\n}\n\n/**\n * @description\n * Configures and initializes environment for unit testing and provides methods for\n * creating components and services in unit tests.\n *\n * `TestBed` is the primary api for writing unit tests for Angular applications and libraries.\n *\n * Note: Use `TestBed` in tests. It will be set to either `TestBedViewEngine` or `TestBedRender3`\n * according to the compiler used.\n *\n * @publicApi\n */\nexport const TestBed: TestBedStatic =\n    ivyEnabled ? TestBedRender3 as any as TestBedStatic : TestBedViewEngine as any as TestBedStatic;\n\n/**\n * Returns a singleton of the applicable `TestBed`.\n *\n * It will be either an instance of `TestBedViewEngine` or `TestBedRender3`.\n *\n * @publicApi\n */\nexport const getTestBed: () => TestBed = ivyEnabled ? _getTestBedRender3 : _getTestBedViewEngine;\n\nlet testBed: TestBedViewEngine;\n\nfunction _getTestBedViewEngine(): TestBedViewEngine {\n  return testBed = testBed || new TestBedViewEngine();\n}\n\n/**\n * Allows injecting dependencies in `beforeEach()` and `it()`.\n *\n * Example:\n *\n * ```\n * beforeEach(inject([Dependency, AClass], (dep, object) => {\n *   // some code that uses `dep` and `object`\n *   // ...\n * }));\n *\n * it('...', inject([AClass], (object) => {\n *   object.doSomething();\n *   expect(...);\n * })\n * ```\n *\n * Notes:\n * - inject is currently a function because of some Traceur limitation the syntax should\n * eventually\n *   becomes `it('...', @Inject (object: AClass, async: AsyncTestCompleter) => { ... });`\n *\n * @publicApi\n */\nexport function inject(tokens: any[], fn: Function): () => any {\n  const testBed = getTestBed();\n  if (tokens.indexOf(AsyncTestCompleter) >= 0) {\n    // Not using an arrow function to preserve context passed from call site\n    return function(this: unknown) {\n      // Return an async test method that returns a Promise if AsyncTestCompleter is one of\n      // the injected tokens.\n      return testBed.compileComponents().then(() => {\n        const completer = testBed.inject(AsyncTestCompleter);\n        testBed.execute(tokens, fn, this);\n        return completer.promise;\n      });\n    };\n  } else {\n    // Not using an arrow function to preserve context passed from call site\n    return function(this: unknown) {\n      return testBed.execute(tokens, fn, this);\n    };\n  }\n}\n\n/**\n * @publicApi\n */\nexport class InjectSetupWrapper {\n  constructor(private _moduleDef: () => TestModuleMetadata) {}\n\n  private _addModule() {\n    const moduleDef = this._moduleDef();\n    if (moduleDef) {\n      getTestBed().configureTestingModule(moduleDef);\n    }\n  }\n\n  inject(tokens: any[], fn: Function): () => any {\n    const self = this;\n    // Not using an arrow function to preserve context passed from call site\n    return function(this: unknown) {\n      self._addModule();\n      return inject(tokens, fn).call(this);\n    };\n  }\n}\n\n/**\n * @publicApi\n */\nexport function withModule(moduleDef: TestModuleMetadata): InjectSetupWrapper;\nexport function withModule(moduleDef: TestModuleMetadata, fn: Function): () => any;\nexport function withModule(moduleDef: TestModuleMetadata, fn?: Function|null): (() => any)|\n    InjectSetupWrapper {\n  if (fn) {\n    // Not using an arrow function to preserve context passed from call site\n    return function(this: unknown) {\n      const testBed = getTestBed();\n      if (moduleDef) {\n        testBed.configureTestingModule(moduleDef);\n      }\n      return fn.apply(this);\n    };\n  }\n  return new InjectSetupWrapper(() => moduleDef);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Public Test Library for unit testing Angular applications. Assumes that you are running\n * with Jasmine, Mocha, or a similar framework which exports a beforeEach function and\n * allows tests to be asynchronous by either returning a promise or using a 'done' parameter.\n */\n\nimport {resetFakeAsyncZone} from './fake_async';\nimport {TestBed} from './test_bed';\n\ndeclare var global: any;\n\nconst _global = <any>(typeof window === 'undefined' ? global : window);\n\n// Reset the test providers and the fake async zone before each test.\nif (_global.beforeEach) {\n  _global.beforeEach(() => {\n    TestBed.resetTestingModule();\n    resetFakeAsyncZone();\n  });\n}\n\n// TODO(juliemr): remove this, only used because we need to export something to have compilation\n// work.\nexport const __core_private_testing_placeholder__ = '';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {TestingCompiler as ɵTestingCompiler, TestingCompilerFactory as ɵTestingCompilerFactory} from './test_compiler';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the core/testing package.\n */\n\nexport * from './async';\nexport * from './component_fixture';\nexport * from './fake_async';\nexport {TestBed, getTestBed, inject, InjectSetupWrapper, withModule} from './test_bed';\nexport * from './test_bed_common';\nexport * from './before_each';\nexport * from './metadata_override';\nexport {MetadataOverrider as ɵMetadataOverrider} from './metadata_overrider';\nexport * from './private_export_testing';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/// <reference types=\"jasmine\" />\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport * from './src/testing';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {TestBedRender3 as ɵangular_packages_core_testing_testing_b,_getTestBedRender3 as ɵangular_packages_core_testing_testing_c} from './src/r3_test_bed';\nexport {TestBedViewEngine as ɵangular_packages_core_testing_testing_a} from './src/test_bed';"]}